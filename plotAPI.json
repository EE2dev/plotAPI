{
  "name": "Plot",
  "children": [
    {
      "name": ".area()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 2
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The horizontal position of the baseline bound to the x scale",
              "ID": 7
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The horizontal position of the topline bound to the x scale. If x2 is not specified, it defaults to x1",
              "ID": 8
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The vertical position of the baseline bound to the y scale",
              "ID": 9
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The vertical position of the topline bound to the y scale. If y2 is not specified, it defaults to y1",
              "ID": 10
            },
            {
              "name": "z",
              "type": "channel",
              "info": "A categorical value to group data into series. If z is not specified, it defaults to fill if a channel, or stroke if a channel",
              "ID": 11
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "curve",
              "type": "constant string",
              "children": [
                {
                  "name": "'basis'",
                  "type": "string literal",
                  "info": "A cubic basis spline (repeating the end points)",
                  "ID": 731
                },
                {
                  "name": "'basis-open'",
                  "type": "string literal",
                  "info": "An open cubic basis spline",
                  "ID": 732
                },
                {
                  "name": "'basis-closed'",
                  "type": "string literal",
                  "info": "A closed cubic basis spline",
                  "ID": 733
                },
                {
                  "name": "'bump-x'",
                  "type": "string literal",
                  "info": "A Bézier curve with horizontal tangents",
                  "ID": 734
                },
                {
                  "name": "'bump-y'",
                  "type": "string literal",
                  "info": "A Bézier curve with vertical tangents",
                  "ID": 735
                },
                {
                  "name": "'cardinal'",
                  "type": "string literal",
                  "info": "A cubic cardinal spline (with one-sided differences at the ends)",
                  "ID": 736
                },
                {
                  "name": "'cardinal-open'",
                  "type": "string literal",
                  "info": "An open cubic cardinal spline",
                  "ID": 737
                },
                {
                  "name": "'cardinal-closed'",
                  "type": "string literal",
                  "info": "An closed cubic cardinal spline",
                  "ID": 738
                },
                {
                  "name": "'catmull-rom'",
                  "type": "string literal",
                  "info": "A cubic Catmull–Rom spline (with one-sided differences at the ends)",
                  "ID": 739
                },
                {
                  "name": "'catmull-rom-open'",
                  "type": "string literal",
                  "info": "An open cubic Catmull–Rom spline",
                  "ID": 740
                },
                {
                  "name": "'catmull-rom-closed'",
                  "type": "string literal",
                  "info": "A closed cubic Catmull–Rom spline",
                  "ID": 741
                },
                {
                  "name": "'linear'",
                  "type": "string literal",
                  "info": "A piecewise linear curve (i.e., straight line segments)",
                  "ID": 742
                },
                {
                  "name": "'linear-closed'",
                  "type": "string literal",
                  "info": "A closed piecewise linear curve (i.e., straight line segments)",
                  "ID": 743
                },
                {
                  "name": "'monotone-x'",
                  "type": "string literal",
                  "info": "A cubic spline that preserves monotonicity in x",
                  "ID": 744
                },
                {
                  "name": "'monotone-y'",
                  "type": "string literal",
                  "info": "A cubic spline that preserves monotonicity in y",
                  "ID": 745
                },
                {
                  "name": "'natural'",
                  "type": "string literal",
                  "info": "A natural cubic spline",
                  "ID": 746
                },
                {
                  "name": "'step'",
                  "type": "string literal",
                  "info": "A piecewise constant function where y changes at the midpoint of x",
                  "ID": 747
                },
                {
                  "name": "'step-after'",
                  "type": "string literal",
                  "info": "A piecewise constant function where y changes after x",
                  "ID": 748
                },
                {
                  "name": "'step-before'",
                  "type": "string literal",
                  "info": "A piecewise constant function where x changes after y",
                  "ID": 749
                }
              ],
              "info": "The curve method, either a string or a function",
              "ID": 730
            },
            {
              "name": "tension",
              "type": "constant number",
              "info": "The curve tension for fine-tuning. The tension option only has an effect on cardinal and Catmull–Rom splines (cardinal, cardinal-open, cardinal-closed, catmull-rom, catmull-rom-open, and catmull-rom-closed). For cardinal splines, it corresponds to tension; for Catmull–Rom splines, alpha",
              "ID": 750
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 3
        }
      ],
      "info": "Draws regions formed by a baseline (x1, y1) and a topline (x2, y2) as in an area chart. Often the baseline represents y = 0. While not required, typically the x and y scales are both quantitative",
      "url": "marks/area.png",
      "ID": 1
    },
    {
      "name": ".areaX()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 69
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the baseline and topline bound to the x scale. The y option specifies the y1 channel",
              "ID": 74
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The horizontal position of the baseline bound to the x scale",
              "ID": 75
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The horizontal position of the topline bound to the x scale. If x2 is not specified, it defaults to x1",
              "ID": 76
            },
            {
              "name": "x",
              "type": "channel",
              "info": "If neither the x1 nor x2 option is specified, the x option may be specified as shorthand to apply an implicit stackX transform with a baseline at x = 0. If the y option is not specified, it defaults to the identity function",
              "ID": 77
            },
            {
              "name": "z",
              "type": "channel",
              "info": "A categorical value to group data into series. If z is not specified, it defaults to fill if a channel, or stroke if a channel",
              "ID": 78
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "curve",
              "type": "constant string",
              "children": [
                {
                  "name": "'basis'",
                  "type": "string literal",
                  "info": "A cubic basis spline (repeating the end points)",
                  "ID": 731
                },
                {
                  "name": "'basis-open'",
                  "type": "string literal",
                  "info": "An open cubic basis spline",
                  "ID": 732
                },
                {
                  "name": "'basis-closed'",
                  "type": "string literal",
                  "info": "A closed cubic basis spline",
                  "ID": 733
                },
                {
                  "name": "'bump-x'",
                  "type": "string literal",
                  "info": "A Bézier curve with horizontal tangents",
                  "ID": 734
                },
                {
                  "name": "'bump-y'",
                  "type": "string literal",
                  "info": "A Bézier curve with vertical tangents",
                  "ID": 735
                },
                {
                  "name": "'cardinal'",
                  "type": "string literal",
                  "info": "A cubic cardinal spline (with one-sided differences at the ends)",
                  "ID": 736
                },
                {
                  "name": "'cardinal-open'",
                  "type": "string literal",
                  "info": "An open cubic cardinal spline",
                  "ID": 737
                },
                {
                  "name": "'cardinal-closed'",
                  "type": "string literal",
                  "info": "An closed cubic cardinal spline",
                  "ID": 738
                },
                {
                  "name": "'catmull-rom'",
                  "type": "string literal",
                  "info": "A cubic Catmull–Rom spline (with one-sided differences at the ends)",
                  "ID": 739
                },
                {
                  "name": "'catmull-rom-open'",
                  "type": "string literal",
                  "info": "An open cubic Catmull–Rom spline",
                  "ID": 740
                },
                {
                  "name": "'catmull-rom-closed'",
                  "type": "string literal",
                  "info": "A closed cubic Catmull–Rom spline",
                  "ID": 741
                },
                {
                  "name": "'linear'",
                  "type": "string literal",
                  "info": "A piecewise linear curve (i.e., straight line segments)",
                  "ID": 742
                },
                {
                  "name": "'linear-closed'",
                  "type": "string literal",
                  "info": "A closed piecewise linear curve (i.e., straight line segments)",
                  "ID": 743
                },
                {
                  "name": "'monotone-x'",
                  "type": "string literal",
                  "info": "A cubic spline that preserves monotonicity in x",
                  "ID": 744
                },
                {
                  "name": "'monotone-y'",
                  "type": "string literal",
                  "info": "A cubic spline that preserves monotonicity in y",
                  "ID": 745
                },
                {
                  "name": "'natural'",
                  "type": "string literal",
                  "info": "A natural cubic spline",
                  "ID": 746
                },
                {
                  "name": "'step'",
                  "type": "string literal",
                  "info": "A piecewise constant function where y changes at the midpoint of x",
                  "ID": 747
                },
                {
                  "name": "'step-after'",
                  "type": "string literal",
                  "info": "A piecewise constant function where y changes after x",
                  "ID": 748
                },
                {
                  "name": "'step-before'",
                  "type": "string literal",
                  "info": "A piecewise constant function where x changes after y",
                  "ID": 749
                }
              ],
              "info": "The curve method, either a string or a function",
              "ID": 730
            },
            {
              "name": "tension",
              "type": "constant number",
              "info": "The curve tension for fine-tuning. The tension option only has an effect on cardinal and Catmull–Rom splines (cardinal, cardinal-open, cardinal-closed, catmull-rom, catmull-rom-open, and catmull-rom-closed). For cardinal splines, it corresponds to tension; for Catmull–Rom splines, alpha",
              "ID": 750
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 70
        }
      ],
      "info": "Returns a new area with the given data and options. This constructor is used when the baseline and topline share y values, as in a time-series area chart where time goes up↑",
      "url": "marks/areaX.png",
      "ID": 68
    },
    {
      "name": ".areaY()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 136
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the baseline and topline bound to the x scale. The x option specifies the x1 channel",
              "ID": 141
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The vertical position of the baseline bound to the y scale",
              "ID": 142
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The vertical position of the topline bound to the y scale. If y2 is not specified, it defaults to y1",
              "ID": 143
            },
            {
              "name": "y",
              "type": "channel",
              "info": "If neither the y1 nor y2 option is specified, the y option may be specified as shorthand to apply an implicit stackY transform with a baseline at y = 0. If the y option is not specified, it defaults to the identity function",
              "ID": 144
            },
            {
              "name": "z",
              "type": "channel",
              "info": "A categorical value to group data into series. If z is not specified, it defaults to fill if a channel, or stroke if a channel",
              "ID": 145
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "curve",
              "type": "constant string",
              "children": [
                {
                  "name": "'basis'",
                  "type": "string literal",
                  "info": "A cubic basis spline (repeating the end points)",
                  "ID": 731
                },
                {
                  "name": "'basis-open'",
                  "type": "string literal",
                  "info": "An open cubic basis spline",
                  "ID": 732
                },
                {
                  "name": "'basis-closed'",
                  "type": "string literal",
                  "info": "A closed cubic basis spline",
                  "ID": 733
                },
                {
                  "name": "'bump-x'",
                  "type": "string literal",
                  "info": "A Bézier curve with horizontal tangents",
                  "ID": 734
                },
                {
                  "name": "'bump-y'",
                  "type": "string literal",
                  "info": "A Bézier curve with vertical tangents",
                  "ID": 735
                },
                {
                  "name": "'cardinal'",
                  "type": "string literal",
                  "info": "A cubic cardinal spline (with one-sided differences at the ends)",
                  "ID": 736
                },
                {
                  "name": "'cardinal-open'",
                  "type": "string literal",
                  "info": "An open cubic cardinal spline",
                  "ID": 737
                },
                {
                  "name": "'cardinal-closed'",
                  "type": "string literal",
                  "info": "An closed cubic cardinal spline",
                  "ID": 738
                },
                {
                  "name": "'catmull-rom'",
                  "type": "string literal",
                  "info": "A cubic Catmull–Rom spline (with one-sided differences at the ends)",
                  "ID": 739
                },
                {
                  "name": "'catmull-rom-open'",
                  "type": "string literal",
                  "info": "An open cubic Catmull–Rom spline",
                  "ID": 740
                },
                {
                  "name": "'catmull-rom-closed'",
                  "type": "string literal",
                  "info": "A closed cubic Catmull–Rom spline",
                  "ID": 741
                },
                {
                  "name": "'linear'",
                  "type": "string literal",
                  "info": "A piecewise linear curve (i.e., straight line segments)",
                  "ID": 742
                },
                {
                  "name": "'linear-closed'",
                  "type": "string literal",
                  "info": "A closed piecewise linear curve (i.e., straight line segments)",
                  "ID": 743
                },
                {
                  "name": "'monotone-x'",
                  "type": "string literal",
                  "info": "A cubic spline that preserves monotonicity in x",
                  "ID": 744
                },
                {
                  "name": "'monotone-y'",
                  "type": "string literal",
                  "info": "A cubic spline that preserves monotonicity in y",
                  "ID": 745
                },
                {
                  "name": "'natural'",
                  "type": "string literal",
                  "info": "A natural cubic spline",
                  "ID": 746
                },
                {
                  "name": "'step'",
                  "type": "string literal",
                  "info": "A piecewise constant function where y changes at the midpoint of x",
                  "ID": 747
                },
                {
                  "name": "'step-after'",
                  "type": "string literal",
                  "info": "A piecewise constant function where y changes after x",
                  "ID": 748
                },
                {
                  "name": "'step-before'",
                  "type": "string literal",
                  "info": "A piecewise constant function where x changes after y",
                  "ID": 749
                }
              ],
              "info": "The curve method, either a string or a function",
              "ID": 730
            },
            {
              "name": "tension",
              "type": "constant number",
              "info": "The curve tension for fine-tuning. The tension option only has an effect on cardinal and Catmull–Rom splines (cardinal, cardinal-open, cardinal-closed, catmull-rom, catmull-rom-open, and catmull-rom-closed). For cardinal splines, it corresponds to tension; for Catmull–Rom splines, alpha",
              "ID": 750
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 137
        }
      ],
      "info": "Returns a new area with the given data and options. This constructor is used when the baseline and topline share x values, as in a time-series area chart where time goes right→",
      "url": "marks/area.png",
      "ID": 135
    },
    {
      "name": ".barX()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 203
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x",
              "type": "channel",
              "info": "If neither the x1 nor x2 option are specified, the x option may be specified as shorthand to apply an implicit stackX transform. This is the typical configuration for a horizontal bar chart with bars aligned at x = 0. If the x option is not specified, it defaults to the identity function",
              "ID": 208
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position bound to the x scale",
              "ID": 209
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position; bound to the x scale",
              "ID": 210
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position bound to the y scale, which must be band. If the y channel is not specified, the bar will span the full vertical extent of the plot (or facet)",
              "ID": 211
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "rx",
              "type": "constant number",
              "info": "The x-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 222
            },
            {
              "name": "ry",
              "type": "constant number",
              "info": "The y-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 223
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 204
        }
      ],
      "info": "Draws rectangles where y is ordinal and x is quantitative. There is usually one ordinal value associated with each bar, such as a name, and two quantitative values defining a lower and upper bound. The lower bound is often not specified explicitly because it defaults to zero as in a conventional bar chart",
      "url": "marks/barX.png",
      "ID": 202
    },
    {
      "name": ".barY()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 255
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "y",
              "type": "channel",
              "info": "If neither the y1 nor y2 option are specified, the x option may be specified as shorthand to apply an implicit stackY transform. This is the typical configuration for a horizontal bar chart with bars aligned at y = 0. If the y option is not specified, it defaults to the identity function",
              "ID": 260
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position bound to the y scale",
              "ID": 261
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position bound to the y scale",
              "ID": 262
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position bound to the x scale, which must be band. If the x channel is not specified, the bar will span the full horizontal extent of the plot (or facet)",
              "ID": 263
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "rx",
              "type": "constant number",
              "info": "The x-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 274
            },
            {
              "name": "ry",
              "type": "constant number",
              "info": "The y-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 275
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 256
        }
      ],
      "info": "Draws rectangles where x is ordinal and y is quantitative. There is usually one ordinal value associated with each bar, such as a name, and two quantitative values defining a lower and upper bound. The lower bound is often not specified explicitly because it defaults to zero as in a conventional bar chart",
      "url": "marks/barY.png",
      "ID": 254
    },
    {
      "name": ".cell()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 307
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position bound to the x scale, which must be band",
              "ID": 312
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position bound to the y scale, which must be band",
              "ID": 313
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "rx",
              "type": "constant number",
              "info": "The x-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 324
            },
            {
              "name": "ry",
              "type": "constant number",
              "info": "The y-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 325
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 308
        }
      ],
      "info": "Draws rectangles where both x and y are ordinal, typically in conjunction with a fill channel to encode value. Cells are often used in conjunction with a group transform",
      "url": "marks/cell.png",
      "ID": 306
    },
    {
      "name": ".cellX()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 357
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position bound to the x scale, which must be band",
              "ID": 362
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position bound to the y scale, which must be band",
              "ID": 363
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "rx",
              "type": "constant number",
              "info": "The x-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 374
            },
            {
              "name": "ry",
              "type": "constant number",
              "info": "The y-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 375
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 358
        }
      ],
      "info": "Equivalent to Plot.cell, except that if the x option is not specified, it defaults to [0, 1, 2, …], and if the fill option is not specified and stroke is not a channel, the fill defaults to the identity function and assumes that data = [x₀, x₁, x₂, …]",
      "url": "marks/cell.png",
      "ID": 356
    },
    {
      "name": ".cellY()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 407
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position bound to the x scale, which must be band",
              "ID": 412
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position bound to the y scale, which must be band",
              "ID": 413
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "rx",
              "type": "constant number",
              "info": "The x-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 424
            },
            {
              "name": "ry",
              "type": "constant number",
              "info": "The y-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 425
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 408
        }
      ],
      "info": "Equivalent to Plot.cell, except that if the y option is not specified, it defaults to [0, 1, 2, …], and if the fill option is not specified and stroke is not a channel, the fill defaults to the identity function and assumes that data = [y₀, y₁, y₂, …]",
      "url": "marks/cell.png",
      "ID": 406
    },
    {
      "name": ".dot()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 457
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position bound to the x scale. If the x channel is not specified, dots will be horizontally centered in the plot (or facet)",
              "ID": 462
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position bound to the y scale. If the y channel is not specified, dots will vertically centered in the plot (or facet)",
              "ID": 463
            },
            {
              "name": "r",
              "type": "channel",
              "info": "The radius (area) which defaults to 3 pixels bound to the radius scale, which defaults to sqr",
              "ID": 464
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels. Default is 1.5",
              "ID": 470
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 458
        }
      ],
      "info": "Draws circles (and in the future, possibly other symbols) as in a scatterplot",
      "url": "marks/dot.png",
      "ID": 456
    },
    {
      "name": ".dotX()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 501
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position bound to the x scale. If the x channel is not specified, it defaults to the identity function and assumes that data = [x₀, x₁, x₂, …]",
              "ID": 506
            },
            {
              "name": "r",
              "type": "channel",
              "info": "The radius (area) which defaults to 3 pixels bound to the radius scale, which defaults to sqr",
              "ID": 507
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels. Default is 1.5",
              "ID": 513
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 502
        }
      ],
      "info": "Equivalent to Plot.dot except that if the x option is not specified, it defaults to the identity function and assumes that data = [x₀, x₁, x₂, …]",
      "url": "marks/dot.png",
      "ID": 500
    },
    {
      "name": ".dotY()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 544
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position bound to the y scale. If the y channel is not specified, it defaults to the identity function and assumes that data = [y₀, y₁, y₂, …]",
              "ID": 549
            },
            {
              "name": "r",
              "type": "channel",
              "info": "The radius (area) which defaults to 3 pixels bound to the radius scale, which defaults to sqr",
              "ID": 550
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels. Default is 1.5",
              "ID": 556
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 545
        }
      ],
      "info": "Equivalent to Plot.dot except that if the y option is not specified, it defaults to the identity function and assumes that data = [y₀, y₁, y₂, …]",
      "url": "marks/dot.png",
      "ID": 543
    },
    {
      "name": ".line()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 587
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position bound to the x scale",
              "ID": 592
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position bound to the y scale",
              "ID": 593
            },
            {
              "name": "z",
              "type": "channel",
              "info": "A categorical value to group data into series. If z is not specified, it defaults to stroke if a channel, or fill if a channel",
              "ID": 594
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to none",
              "ID": 595
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is currentColor",
              "ID": 597
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "curve",
              "type": "constant string",
              "children": [
                {
                  "name": "'basis'",
                  "type": "string literal",
                  "info": "A cubic basis spline (repeating the end points)",
                  "ID": 731
                },
                {
                  "name": "'basis-open'",
                  "type": "string literal",
                  "info": "An open cubic basis spline",
                  "ID": 732
                },
                {
                  "name": "'basis-closed'",
                  "type": "string literal",
                  "info": "A closed cubic basis spline",
                  "ID": 733
                },
                {
                  "name": "'bump-x'",
                  "type": "string literal",
                  "info": "A Bézier curve with horizontal tangents",
                  "ID": 734
                },
                {
                  "name": "'bump-y'",
                  "type": "string literal",
                  "info": "A Bézier curve with vertical tangents",
                  "ID": 735
                },
                {
                  "name": "'cardinal'",
                  "type": "string literal",
                  "info": "A cubic cardinal spline (with one-sided differences at the ends)",
                  "ID": 736
                },
                {
                  "name": "'cardinal-open'",
                  "type": "string literal",
                  "info": "An open cubic cardinal spline",
                  "ID": 737
                },
                {
                  "name": "'cardinal-closed'",
                  "type": "string literal",
                  "info": "An closed cubic cardinal spline",
                  "ID": 738
                },
                {
                  "name": "'catmull-rom'",
                  "type": "string literal",
                  "info": "A cubic Catmull–Rom spline (with one-sided differences at the ends)",
                  "ID": 739
                },
                {
                  "name": "'catmull-rom-open'",
                  "type": "string literal",
                  "info": "An open cubic Catmull–Rom spline",
                  "ID": 740
                },
                {
                  "name": "'catmull-rom-closed'",
                  "type": "string literal",
                  "info": "A closed cubic Catmull–Rom spline",
                  "ID": 741
                },
                {
                  "name": "'linear'",
                  "type": "string literal",
                  "info": "A piecewise linear curve (i.e., straight line segments)",
                  "ID": 742
                },
                {
                  "name": "'linear-closed'",
                  "type": "string literal",
                  "info": "A closed piecewise linear curve (i.e., straight line segments)",
                  "ID": 743
                },
                {
                  "name": "'monotone-x'",
                  "type": "string literal",
                  "info": "A cubic spline that preserves monotonicity in x",
                  "ID": 744
                },
                {
                  "name": "'monotone-y'",
                  "type": "string literal",
                  "info": "A cubic spline that preserves monotonicity in y",
                  "ID": 745
                },
                {
                  "name": "'natural'",
                  "type": "string literal",
                  "info": "A natural cubic spline",
                  "ID": 746
                },
                {
                  "name": "'step'",
                  "type": "string literal",
                  "info": "A piecewise constant function where y changes at the midpoint of x",
                  "ID": 747
                },
                {
                  "name": "'step-after'",
                  "type": "string literal",
                  "info": "A piecewise constant function where y changes after x",
                  "ID": 748
                },
                {
                  "name": "'step-before'",
                  "type": "string literal",
                  "info": "A piecewise constant function where x changes after y",
                  "ID": 749
                }
              ],
              "info": "The curve method, either a string or a function",
              "ID": 730
            },
            {
              "name": "tension",
              "type": "constant number",
              "info": "The curve tension for fine-tuning. The tension option only has an effect on cardinal and Catmull–Rom splines (cardinal, cardinal-open, cardinal-closed, catmull-rom, catmull-rom-open, and catmull-rom-closed). For cardinal splines, it corresponds to tension; for Catmull–Rom splines, alpha",
              "ID": 750
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels. Default is 1.5",
              "ID": 621
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel. Default is 1",
              "ID": 632
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 588
        }
      ],
      "info": "Draws two-dimensional lines as in a line chart. If neither the x nor y options are specified, data is assumed to be an array of pairs [[x₀, y₀], [x₁, y₁], [x₂, y₂], …] such that x = [x₀, x₁, x₂, …] and y = [y₀, y₁, y₂, …]",
      "url": "marks/line.png",
      "ID": 586
    },
    {
      "name": ".lineX()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 652
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position bound to the x scale. If the x option is not specified, it defaults to the identity function and assumes that data = [x₀, x₁, x₂, …]",
              "ID": 657
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position bound to the y scale. If the y option is not specified, it defaults to [0, 1, 2, …]",
              "ID": 658
            },
            {
              "name": "z",
              "type": "channel",
              "info": "A categorical value to group data into series. If z is not specified, it defaults to stroke if a channel, or fill if a channel",
              "ID": 659
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to none",
              "ID": 660
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is currentColor",
              "ID": 662
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "curve",
              "type": "constant string",
              "children": [
                {
                  "name": "'basis'",
                  "type": "string literal",
                  "info": "A cubic basis spline (repeating the end points)",
                  "ID": 731
                },
                {
                  "name": "'basis-open'",
                  "type": "string literal",
                  "info": "An open cubic basis spline",
                  "ID": 732
                },
                {
                  "name": "'basis-closed'",
                  "type": "string literal",
                  "info": "A closed cubic basis spline",
                  "ID": 733
                },
                {
                  "name": "'bump-x'",
                  "type": "string literal",
                  "info": "A Bézier curve with horizontal tangents",
                  "ID": 734
                },
                {
                  "name": "'bump-y'",
                  "type": "string literal",
                  "info": "A Bézier curve with vertical tangents",
                  "ID": 735
                },
                {
                  "name": "'cardinal'",
                  "type": "string literal",
                  "info": "A cubic cardinal spline (with one-sided differences at the ends)",
                  "ID": 736
                },
                {
                  "name": "'cardinal-open'",
                  "type": "string literal",
                  "info": "An open cubic cardinal spline",
                  "ID": 737
                },
                {
                  "name": "'cardinal-closed'",
                  "type": "string literal",
                  "info": "An closed cubic cardinal spline",
                  "ID": 738
                },
                {
                  "name": "'catmull-rom'",
                  "type": "string literal",
                  "info": "A cubic Catmull–Rom spline (with one-sided differences at the ends)",
                  "ID": 739
                },
                {
                  "name": "'catmull-rom-open'",
                  "type": "string literal",
                  "info": "An open cubic Catmull–Rom spline",
                  "ID": 740
                },
                {
                  "name": "'catmull-rom-closed'",
                  "type": "string literal",
                  "info": "A closed cubic Catmull–Rom spline",
                  "ID": 741
                },
                {
                  "name": "'linear'",
                  "type": "string literal",
                  "info": "A piecewise linear curve (i.e., straight line segments)",
                  "ID": 742
                },
                {
                  "name": "'linear-closed'",
                  "type": "string literal",
                  "info": "A closed piecewise linear curve (i.e., straight line segments)",
                  "ID": 743
                },
                {
                  "name": "'monotone-x'",
                  "type": "string literal",
                  "info": "A cubic spline that preserves monotonicity in x",
                  "ID": 744
                },
                {
                  "name": "'monotone-y'",
                  "type": "string literal",
                  "info": "A cubic spline that preserves monotonicity in y",
                  "ID": 745
                },
                {
                  "name": "'natural'",
                  "type": "string literal",
                  "info": "A natural cubic spline",
                  "ID": 746
                },
                {
                  "name": "'step'",
                  "type": "string literal",
                  "info": "A piecewise constant function where y changes at the midpoint of x",
                  "ID": 747
                },
                {
                  "name": "'step-after'",
                  "type": "string literal",
                  "info": "A piecewise constant function where y changes after x",
                  "ID": 748
                },
                {
                  "name": "'step-before'",
                  "type": "string literal",
                  "info": "A piecewise constant function where x changes after y",
                  "ID": 749
                }
              ],
              "info": "The curve method, either a string or a function",
              "ID": 730
            },
            {
              "name": "tension",
              "type": "constant number",
              "info": "The curve tension for fine-tuning. The tension option only has an effect on cardinal and Catmull–Rom splines (cardinal, cardinal-open, cardinal-closed, catmull-rom, catmull-rom-open, and catmull-rom-closed). For cardinal splines, it corresponds to tension; for Catmull–Rom splines, alpha",
              "ID": 750
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels. Default is 1.5",
              "ID": 686
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel. Default is 1",
              "ID": 697
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 653
        }
      ],
      "info": "Draws two-dimensional lines as in a line chart. Equivalent to Plot.line except that if the x option is not specified, it defaults to the identity function and assumes that data = [x₀, x₁, x₂, …]. If the y option is not specified, it defaults to [0, 1, 2, …]",
      "url": "marks/lineX.png",
      "ID": 651
    },
    {
      "name": ".lineY()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 717
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position bound to the x scale. If the x option is not specified, it defaults to [0, 1, 2, …]",
              "ID": 722
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position bound to the y scale. If the y option is not specified, it defaults to the identity function and assumes that data = [y₀, y₁, y₂, …]",
              "ID": 723
            },
            {
              "name": "z",
              "type": "channel",
              "info": "A categorical value to group data into series. If z is not specified, it defaults to stroke if a channel, or fill if a channel",
              "ID": 724
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to none",
              "ID": 725
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is currentColor",
              "ID": 727
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "curve",
              "type": "constant string",
              "children": [
                {
                  "name": "'basis'",
                  "type": "string literal",
                  "info": "A cubic basis spline (repeating the end points)",
                  "ID": 731
                },
                {
                  "name": "'basis-open'",
                  "type": "string literal",
                  "info": "An open cubic basis spline",
                  "ID": 732
                },
                {
                  "name": "'basis-closed'",
                  "type": "string literal",
                  "info": "A closed cubic basis spline",
                  "ID": 733
                },
                {
                  "name": "'bump-x'",
                  "type": "string literal",
                  "info": "A Bézier curve with horizontal tangents",
                  "ID": 734
                },
                {
                  "name": "'bump-y'",
                  "type": "string literal",
                  "info": "A Bézier curve with vertical tangents",
                  "ID": 735
                },
                {
                  "name": "'cardinal'",
                  "type": "string literal",
                  "info": "A cubic cardinal spline (with one-sided differences at the ends)",
                  "ID": 736
                },
                {
                  "name": "'cardinal-open'",
                  "type": "string literal",
                  "info": "An open cubic cardinal spline",
                  "ID": 737
                },
                {
                  "name": "'cardinal-closed'",
                  "type": "string literal",
                  "info": "An closed cubic cardinal spline",
                  "ID": 738
                },
                {
                  "name": "'catmull-rom'",
                  "type": "string literal",
                  "info": "A cubic Catmull–Rom spline (with one-sided differences at the ends)",
                  "ID": 739
                },
                {
                  "name": "'catmull-rom-open'",
                  "type": "string literal",
                  "info": "An open cubic Catmull–Rom spline",
                  "ID": 740
                },
                {
                  "name": "'catmull-rom-closed'",
                  "type": "string literal",
                  "info": "A closed cubic Catmull–Rom spline",
                  "ID": 741
                },
                {
                  "name": "'linear'",
                  "type": "string literal",
                  "info": "A piecewise linear curve (i.e., straight line segments)",
                  "ID": 742
                },
                {
                  "name": "'linear-closed'",
                  "type": "string literal",
                  "info": "A closed piecewise linear curve (i.e., straight line segments)",
                  "ID": 743
                },
                {
                  "name": "'monotone-x'",
                  "type": "string literal",
                  "info": "A cubic spline that preserves monotonicity in x",
                  "ID": 744
                },
                {
                  "name": "'monotone-y'",
                  "type": "string literal",
                  "info": "A cubic spline that preserves monotonicity in y",
                  "ID": 745
                },
                {
                  "name": "'natural'",
                  "type": "string literal",
                  "info": "A natural cubic spline",
                  "ID": 746
                },
                {
                  "name": "'step'",
                  "type": "string literal",
                  "info": "A piecewise constant function where y changes at the midpoint of x",
                  "ID": 747
                },
                {
                  "name": "'step-after'",
                  "type": "string literal",
                  "info": "A piecewise constant function where y changes after x",
                  "ID": 748
                },
                {
                  "name": "'step-before'",
                  "type": "string literal",
                  "info": "A piecewise constant function where x changes after y",
                  "ID": 749
                }
              ],
              "info": "The curve method, either a string or a function",
              "ID": 730
            },
            {
              "name": "tension",
              "type": "constant number",
              "info": "The curve tension for fine-tuning. The tension option only has an effect on cardinal and Catmull–Rom splines (cardinal, cardinal-open, cardinal-closed, catmull-rom, catmull-rom-open, and catmull-rom-closed). For cardinal splines, it corresponds to tension; for Catmull–Rom splines, alpha",
              "ID": 750
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels. Default is 1.5",
              "ID": 751
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel. Default is 1",
              "ID": 762
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 718
        }
      ],
      "info": "Draws two-dimensional lines as in a line chart. Equivalent to Plot.line except that if the y option is not specified, it defaults to the identity function and assumes that data = [y₀, y₁, y₂, …]. If the x option is not specified, it defaults to [0, 1, 2, …]",
      "url": "marks/line.png",
      "ID": 716
    },
    {
      "name": ".link()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 782
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position bound to the x scale",
              "ID": 787
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position bound to the y scale",
              "ID": 788
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position bound to the x scale",
              "ID": 789
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position bound to the y scale",
              "ID": 790
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to none",
              "ID": 791
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is currentColor",
              "ID": 793
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "curve",
              "type": "constant string",
              "children": [
                {
                  "name": "'bump-x'",
                  "type": "string literal",
                  "info": "A Bézier curve with horizontal tangents",
                  "ID": 797
                },
                {
                  "name": "'bump-y'",
                  "type": "string literal",
                  "info": "A Bézier curve with vertical tangents",
                  "ID": 798
                },
                {
                  "name": "'linear'",
                  "type": "string literal",
                  "info": "A piecewise linear curve (i.e., straight line segments)",
                  "ID": 799
                },
                {
                  "name": "'step'",
                  "type": "string literal",
                  "info": "A piecewise constant function where y changes at the midpoint of x",
                  "ID": 800
                },
                {
                  "name": "'step-after'",
                  "type": "string literal",
                  "info": "A piecewise constant function where y changes after x",
                  "ID": 801
                },
                {
                  "name": "'step-before'",
                  "type": "string literal",
                  "info": "A piecewise constant function where x changes after y",
                  "ID": 802
                }
              ],
              "info": "The curve method, either a string or a function",
              "ID": 796
            },
            {
              "name": "tension",
              "type": "constant number",
              "info": "The curve tension for fine-tuning. The tension option only has an effect on cardinal and Catmull–Rom splines (cardinal, cardinal-open, cardinal-closed, catmull-rom, catmull-rom-open, and catmull-rom-closed). For cardinal splines, it corresponds to tension; for Catmull–Rom splines, alpha",
              "ID": 803
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels. Default is 1",
              "ID": 804
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel. Default is 1",
              "ID": 815
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 783
        }
      ],
      "info": "Draws line segments (or curves) connecting pairs of points",
      "url": "marks/link.png",
      "ID": 781
    },
    {
      "name": ".rect()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 835
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position bound to the x scale",
              "ID": 840
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position bound to the x scale",
              "ID": 841
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position bound to the y scale",
              "ID": 842
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position bound to the y scale",
              "ID": 843
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "rx",
              "type": "constant number",
              "info": "The x-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 854
            },
            {
              "name": "ry",
              "type": "constant number",
              "info": "The y-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 855
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 836
        }
      ],
      "info": "Draws rectangles where both x and y are quantitative as in a histogram. Both pairs of quantitative values represent lower and upper bounds, and often one of the lower bounds is implicitly zero. Rects are often used in conjunction with a bin transform",
      "url": "marks/rectX.png",
      "ID": 834
    },
    {
      "name": ".rectX()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 887
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x",
              "type": "channel",
              "info": "If neither the x1 nor x2 option are specified, the x option may be specified as shorthand to apply an implicit stackX transform. This is the typical configuration for a histogram with rects aligned at x = 0. If the x option is not specified, it defaults to the identity function",
              "ID": 892
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position bound to the x scale",
              "ID": 893
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position; bound to the x scale",
              "ID": 894
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position bound to the y scale",
              "ID": 895
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position bound to the y scale",
              "ID": 896
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "rx",
              "type": "constant number",
              "info": "The x-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 907
            },
            {
              "name": "ry",
              "type": "constant number",
              "info": "The y-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 908
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 888
        }
      ],
      "info": "Draws rectangles where both x and y are quantitative as in a histogram. Both pairs of quantitative values represent lower and upper bounds, and often one of the lower bounds is implicitly zero. Rects are often used in conjunction with a bin transform. The Plot.rectX() mark is shorthand for x1 = zero, x2 = x",
      "url": "marks/rectX.png",
      "ID": 886
    },
    {
      "name": ".rectY()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 940
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "y",
              "type": "channel",
              "info": "If neither the y1 nor y2 option is specified, the y option may be specified as shorthand to apply an implicit stackY transform; this is the typical configuration for a histogram with rects aligned at y = 0. If the y option is not specified, it defaults to the identity function",
              "ID": 945
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position bound to the x scale",
              "ID": 946
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position; bound to the x scale",
              "ID": 947
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position bound to the y scale",
              "ID": 948
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position bound to the y scale",
              "ID": 949
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "rx",
              "type": "constant number",
              "info": "The x-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 960
            },
            {
              "name": "ry",
              "type": "constant number",
              "info": "The y-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 961
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 941
        }
      ],
      "info": "Draws rectangles where both x and y are quantitative as in a histogram. Both pairs of quantitative values represent lower and upper bounds, and often one of the lower bounds is implicitly zero. Rects are often used in conjunction with a bin transform. The Plot.rectY() mark is shorthand for y1 = zero, y2 = y",
      "url": "marks/rectY.png",
      "ID": 939
    },
    {
      "name": ".ruleX()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 993
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position bound to the x scale. If the x option is not specified, it defaults to the identity function and assumes that data = [x₀, x₁, x₂, …]",
              "ID": 998
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position bound to the y scale. If the y channel is not specified, the rule will start at the top of the plot (or facet)",
              "ID": 999
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position bound to the y scale. If the y channel is not specified, the rule will end at the bottom of the plot (or facet)",
              "ID": 1000
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position bound to the y scale. If the y channel is specified, it is shorthand for the y2 option with y1 equal to zero",
              "ID": 1001
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to none",
              "ID": 1002
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is currentColor",
              "ID": 1004
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 994
        }
      ],
      "info": "Draws an orthogonal line at the given horizontal position, either across the entire plot (or facet) or bounded in the opposite dimension",
      "url": "marks/ruleX.png",
      "ID": 992
    },
    {
      "name": ".ruleY()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 1041
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position bound to the x scale. If the x channel is not specified, the rule will start at the left edge of the plot (or facet)",
              "ID": 1046
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position bound to the x scale. If the x channel is not specified, the rule will end at the right edge of the plot (or facet)",
              "ID": 1047
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position bound to the x scale. If the x channel is specified, it is shorthand for the x2 option with x1 equal to zero",
              "ID": 1048
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position bound to the y scale. If the y option is not specified, it defaults to the identity function and assumes that data = [y₀, y₁, y₂, …]",
              "ID": 1049
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to none",
              "ID": 1050
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is currentColor",
              "ID": 1052
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 1042
        }
      ],
      "info": "Draws an orthogonal line at the given vertical position, either across the entire plot (or facet) or bounded in the opposite dimension",
      "url": "marks/ruleY.png",
      "ID": 1040
    },
    {
      "name": ".text()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 1089
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "text",
              "type": "channel",
              "info": "The text contents (a string). If text is not specified, it defaults to [0, 1, 2, …] so that something is visible by default",
              "ID": 1094
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position bound to the x scale",
              "ID": 1095
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position bound to the y scale",
              "ID": 1096
            },
            {
              "name": "fontSize",
              "type": "channel",
              "info": "The font size in pixels. Defaults to 10",
              "ID": 1097
            },
            {
              "name": "rotate",
              "type": "channel",
              "info": "The rotation in degrees clockwise. Defaults to 0",
              "ID": 1098
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "fontFamily",
              "type": "constant string",
              "info": "The font name which defaults to 'system-ui'",
              "ID": 1104
            },
            {
              "name": "fontStyle",
              "type": "constant string",
              "info": "The font style which defaults to 'normal'",
              "ID": 1105
            },
            {
              "name": "fontVariant",
              "type": "constant string",
              "info": "The font variant which defaults to 'normal'",
              "ID": 1106
            },
            {
              "name": "fontWeight",
              "type": "constant string",
              "info": "The font weight which defaults to 'normal'",
              "ID": 1107
            },
            {
              "name": "dx",
              "type": "constant string",
              "info": "The horizontal offset as string including units or as a number. Defaults to 0",
              "ID": 1108
            },
            {
              "name": "dy",
              "type": "constant string",
              "info": "The vertical offset as a string including units or as a number. Defaults to 0",
              "ID": 1109
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 1090
        }
      ],
      "info": "Draws a text label at the specified position",
      "url": "marks/text.png",
      "ID": 1088
    },
    {
      "name": ".textX()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 1141
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "text",
              "type": "channel",
              "info": "The text contents (a string). If text is not specified, it defaults to [0, 1, 2, …] so that something is visible by default",
              "ID": 1146
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position bound to the x scale. Defaults to the identity function and assumes that data = [x₀, x₁, x₂, …]",
              "ID": 1147
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position bound to the y scale",
              "ID": 1148
            },
            {
              "name": "fontSize",
              "type": "channel",
              "info": "The font size in pixels. Defaults to 10",
              "ID": 1149
            },
            {
              "name": "rotate",
              "type": "channel",
              "info": "The rotation in degrees clockwise. Defaults to 0",
              "ID": 1150
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "fontFamily",
              "type": "constant string",
              "info": "The font name which defaults to 'system-ui'",
              "ID": 1156
            },
            {
              "name": "fontStyle",
              "type": "constant string",
              "info": "The font style which defaults to 'normal'",
              "ID": 1157
            },
            {
              "name": "fontVariant",
              "type": "constant string",
              "info": "The font variant which defaults to 'normal'",
              "ID": 1158
            },
            {
              "name": "fontWeight",
              "type": "constant string",
              "info": "The font weight which defaults to 'normal'",
              "ID": 1159
            },
            {
              "name": "dx",
              "type": "constant string",
              "info": "The horizontal offset as string including units or as a number. Defaults to 0",
              "ID": 1160
            },
            {
              "name": "dy",
              "type": "constant string",
              "info": "The vertical offset as a string including units or as a number. Defaults to 0",
              "ID": 1161
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 1142
        }
      ],
      "info": "Equivalent to Plot.text(), except x defaults to the identity function and assumes that data = [x₀, x₁, x₂, …]",
      "url": "marks/text.png",
      "ID": 1140
    },
    {
      "name": ".textY()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 1193
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "text",
              "type": "channel",
              "info": "The text contents (a string). If text is not specified, it defaults to [0, 1, 2, …] so that something is visible by default",
              "ID": 1198
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position bound to the x scale",
              "ID": 1199
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position bound to the y scale. Defaults to the identity function and assumes that data = [y₀, y₁, y₂, …]",
              "ID": 1200
            },
            {
              "name": "fontSize",
              "type": "channel",
              "info": "The font size in pixels. Defaults to 10",
              "ID": 1201
            },
            {
              "name": "rotate",
              "type": "channel",
              "info": "The rotation in degrees clockwise. Defaults to 0",
              "ID": 1202
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "fontFamily",
              "type": "constant string",
              "info": "The font name which defaults to 'system-ui'",
              "ID": 1208
            },
            {
              "name": "fontStyle",
              "type": "constant string",
              "info": "The font style which defaults to 'normal'",
              "ID": 1209
            },
            {
              "name": "fontVariant",
              "type": "constant string",
              "info": "The font variant which defaults to 'normal'",
              "ID": 1210
            },
            {
              "name": "fontWeight",
              "type": "constant string",
              "info": "The font weight which defaults to 'normal'",
              "ID": 1211
            },
            {
              "name": "dx",
              "type": "constant string",
              "info": "The horizontal offset as string including units or as a number. Defaults to 0",
              "ID": 1212
            },
            {
              "name": "dy",
              "type": "constant string",
              "info": "The vertical offset as a string including units or as a number. Defaults to 0",
              "ID": 1213
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 1194
        }
      ],
      "info": "Equivalent to Plot.text(), except y defaults to the identity function and assumes that data = [y₀, y₁, y₂, …]",
      "url": "marks/text.png",
      "ID": 1192
    },
    {
      "name": ".tickX()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 1245
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position bound to the x scale",
              "ID": 1250
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position bound to the y scale which must be band. If the y channel is not specified, the tick will span the full vertical extent of the plot (or facet)",
              "ID": 1251
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to none",
              "ID": 1252
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is currentColor",
              "ID": 1254
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 1246
        }
      ],
      "info": "Draws an orthogonal line at the given horizontal position, with an optional secondary position dimension along a band scale",
      "url": "marks/tickX.png",
      "ID": 1244
    },
    {
      "name": ".tickY()",
      "type": "mark constructor",
      "children": [
        {
          "name": "data",
          "type": "data",
          "ID": 1291
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position bound to the x scale which must be band. If the x channel is not specified, the tick will span the full horizontal extent of the plot (or facet)",
              "ID": 1296
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position bound to the y scale",
              "ID": 1297
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to none",
              "ID": 1298
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is currentColor",
              "ID": 1300
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 1292
        }
      ],
      "info": "Draws an orthogonal line at the given vertical position, with an optional secondary position dimension along a band scale",
      "url": "marks/tickY.png",
      "ID": 1290
    },
    {
      "name": ".frame()",
      "type": "mark constructor",
      "children": [
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to none",
              "ID": 1341
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is currentColor",
              "ID": 1343
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 1337
        }
      ],
      "info": "Draws a simple frame around the entire plot (or facet)",
      "url": "marks/frame.png",
      "ID": 1336
    },
    {
      "name": ".bin()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "outputs",
          "children": [
            {
              "name": "channel",
              "type": "output",
              "info": "The channel to be aggregated by a specific aggregation method. Most aggregation methods require referencing a specific subset of data. Then, the output channel has to be also to bound an input channel",
              "children": [
                {
                  "name": "first",
                  "type": "reducer",
                  "info": "The first value in input order",
                  "ID": 1830
                },
                {
                  "name": "last",
                  "type": "reducer",
                  "info": "The last value in input order",
                  "ID": 1831
                },
                {
                  "name": "count",
                  "type": "reducer",
                  "info": "The number of elements (frequency)",
                  "ID": 1832
                },
                {
                  "name": "sum",
                  "type": "reducer",
                  "info": "The sum of values",
                  "ID": 1833
                },
                {
                  "name": "proportion",
                  "type": "reducer",
                  "info": "The sum proportional to the overall total (weighted frequency)",
                  "ID": 1834
                },
                {
                  "name": "proportion-facet",
                  "type": "reducer",
                  "info": "The sum proportional to the facet total",
                  "ID": 1835
                },
                {
                  "name": "min",
                  "type": "reducer",
                  "info": "The minimum value",
                  "ID": 1836
                },
                {
                  "name": "max",
                  "type": "reducer",
                  "info": "The maximum value",
                  "ID": 1837
                },
                {
                  "name": "mean",
                  "type": "reducer",
                  "info": "The mean value (average)",
                  "ID": 1838
                },
                {
                  "name": "median",
                  "type": "reducer",
                  "info": "The median value",
                  "ID": 1839
                },
                {
                  "name": "deviation",
                  "type": "reducer",
                  "info": "The standard deviation",
                  "ID": 1840
                },
                {
                  "name": "variance",
                  "type": "reducer",
                  "info": "The variance per Welford's algorithm",
                  "ID": 1841
                },
                {
                  "name": "function",
                  "type": "reducer function",
                  "info": "A function to be passed the array of values for each bin",
                  "ID": 1842
                },
                {
                  "name": "object",
                  "type": "reducer object",
                  "info": "An object with a reduce method",
                  "ID": 1843
                }
              ],
              "ID": 1829
            }
          ],
          "info": "",
          "ID": 1381
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the bin bound to the x scale",
              "ID": 1401
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the bin bound to the x scale",
              "ID": 1402
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal center of the bin bound to the x scale",
              "ID": 1403
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the bin bound to the y scale",
              "ID": 1404
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the bin bound to the y scale",
              "ID": 1405
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical center of the bin bound to the y scale",
              "ID": 1406
            },
            {
              "name": "z",
              "type": "channel",
              "info": "Additional aggregation channel",
              "ID": 1407
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "rx",
              "type": "constant number",
              "info": "The x-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 1418
            },
            {
              "name": "ry",
              "type": "constant number",
              "info": "The y-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 1419
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            },
            {
              "name": "thresholds",
              "type": "object",
              "info": "The threshold values for the bins",
              "children": [
                {
                  "name": "'freedman-diaconis'",
                  "type": "string literal",
                  "info": "The Freedman–Diaconis rule",
                  "ID": 1611
                },
                {
                  "name": "'scott'",
                  "type": "string literal",
                  "info": "The Scott’s normal reference rule. This is the default",
                  "ID": 1612
                },
                {
                  "name": "'sturges'",
                  "type": "string literal",
                  "info": "The Sturges’ formula",
                  "ID": 1613
                },
                {
                  "name": "n",
                  "type": "constant number",
                  "info": "A count (hint) representing the desired number of bins",
                  "ID": 1614
                },
                {
                  "name": "[]",
                  "type": "array",
                  "info": "An array of n threshold values for n + 1 bins",
                  "ID": 1615
                },
                {
                  "name": "[]",
                  "type": "time interval",
                  "info": "A time interval (for temporal binning)",
                  "ID": 1616
                },
                {
                  "name": "f()",
                  "type": "function",
                  "info": "A function that returns an array, count, or time interval",
                  "ID": 1617
                }
              ],
              "ID": 1610
            },
            {
              "name": "domain",
              "type": "array",
              "info": "The values outside the domain will be omitted",
              "ID": 1618
            },
            {
              "name": "cumulative",
              "type": "constant number",
              "info": "If positive, each bin will contain all lesser bins. If negative, each bin will contain all greater bins rather than all lesser bins, representing the complementary cumulative distribution",
              "ID": 1619
            }
          ],
          "ID": 1397
        }
      ],
      "info": "Bins on x and y. Also groups on the first channel of z, fill, or stroke, if any. It changes the defaults for both, insetLeft, insetRight and insetTop, insetBottom to a total of 1 pixel",
      "ID": 1380
    },
    {
      "name": ".binX()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "outputs",
          "children": [
            {
              "name": "channel",
              "type": "output",
              "info": "The channel to be aggregated by a specific aggregation method. Most aggregation methods require referencing a specific subset of data. Then, the output channel has to be also to bound an input channel",
              "children": [
                {
                  "name": "first",
                  "type": "reducer",
                  "info": "The first value in input order",
                  "ID": 1830
                },
                {
                  "name": "last",
                  "type": "reducer",
                  "info": "The last value in input order",
                  "ID": 1831
                },
                {
                  "name": "count",
                  "type": "reducer",
                  "info": "The number of elements (frequency)",
                  "ID": 1832
                },
                {
                  "name": "sum",
                  "type": "reducer",
                  "info": "The sum of values",
                  "ID": 1833
                },
                {
                  "name": "proportion",
                  "type": "reducer",
                  "info": "The sum proportional to the overall total (weighted frequency)",
                  "ID": 1834
                },
                {
                  "name": "proportion-facet",
                  "type": "reducer",
                  "info": "The sum proportional to the facet total",
                  "ID": 1835
                },
                {
                  "name": "min",
                  "type": "reducer",
                  "info": "The minimum value",
                  "ID": 1836
                },
                {
                  "name": "max",
                  "type": "reducer",
                  "info": "The maximum value",
                  "ID": 1837
                },
                {
                  "name": "mean",
                  "type": "reducer",
                  "info": "The mean value (average)",
                  "ID": 1838
                },
                {
                  "name": "median",
                  "type": "reducer",
                  "info": "The median value",
                  "ID": 1839
                },
                {
                  "name": "deviation",
                  "type": "reducer",
                  "info": "The standard deviation",
                  "ID": 1840
                },
                {
                  "name": "variance",
                  "type": "reducer",
                  "info": "The variance per Welford's algorithm",
                  "ID": 1841
                },
                {
                  "name": "function",
                  "type": "reducer function",
                  "info": "A function to be passed the array of values for each bin",
                  "ID": 1842
                },
                {
                  "name": "object",
                  "type": "reducer object",
                  "info": "An object with a reduce method",
                  "ID": 1843
                }
              ],
              "ID": 1829
            }
          ],
          "info": "",
          "ID": 1461
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the bin bound to the x scale",
              "ID": 1481
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the bin bound to the x scale",
              "ID": 1482
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal center of the bin bound to the x scale",
              "ID": 1483
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the bin bound to the y scale",
              "ID": 1484
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the bin bound to the y scale",
              "ID": 1485
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical center of the bin bound to the y scale",
              "ID": 1486
            },
            {
              "name": "z",
              "type": "channel",
              "info": "Additional aggregation channel",
              "ID": 1487
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "rx",
              "type": "constant number",
              "info": "The x-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 1498
            },
            {
              "name": "ry",
              "type": "constant number",
              "info": "The y-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 1499
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            },
            {
              "name": "thresholds",
              "type": "object",
              "info": "The threshold values for the bins",
              "children": [
                {
                  "name": "'freedman-diaconis'",
                  "type": "string literal",
                  "info": "The Freedman–Diaconis rule",
                  "ID": 1611
                },
                {
                  "name": "'scott'",
                  "type": "string literal",
                  "info": "The Scott’s normal reference rule. This is the default",
                  "ID": 1612
                },
                {
                  "name": "'sturges'",
                  "type": "string literal",
                  "info": "The Sturges’ formula",
                  "ID": 1613
                },
                {
                  "name": "n",
                  "type": "constant number",
                  "info": "A count (hint) representing the desired number of bins",
                  "ID": 1614
                },
                {
                  "name": "[]",
                  "type": "array",
                  "info": "An array of n threshold values for n + 1 bins",
                  "ID": 1615
                },
                {
                  "name": "[]",
                  "type": "time interval",
                  "info": "A time interval (for temporal binning)",
                  "ID": 1616
                },
                {
                  "name": "f()",
                  "type": "function",
                  "info": "A function that returns an array, count, or time interval",
                  "ID": 1617
                }
              ],
              "ID": 1610
            },
            {
              "name": "domain",
              "type": "array",
              "info": "The values outside the domain will be omitted",
              "ID": 1618
            },
            {
              "name": "cumulative",
              "type": "constant number",
              "info": "If positive, each bin will contain all lesser bins. If negative, each bin will contain all greater bins rather than all lesser bins, representing the complementary cumulative distribution",
              "ID": 1619
            }
          ],
          "ID": 1477
        }
      ],
      "info": "Bins on x. Also groups on y and the first channel of z, fill, or stroke, if any. It changes the defaults for insetLeft, insetRight to a total of 1 pixel",
      "ID": 1460
    },
    {
      "name": ".binY()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "outputs",
          "children": [
            {
              "name": "channel",
              "type": "output",
              "info": "The channel to be aggregated by a specific aggregation method. Most aggregation methods require referencing a specific subset of data. Then, the output channel has to be also to bound an input channel",
              "children": [
                {
                  "name": "first",
                  "type": "reducer",
                  "info": "The first value in input order",
                  "ID": 1830
                },
                {
                  "name": "last",
                  "type": "reducer",
                  "info": "The last value in input order",
                  "ID": 1831
                },
                {
                  "name": "count",
                  "type": "reducer",
                  "info": "The number of elements (frequency)",
                  "ID": 1832
                },
                {
                  "name": "sum",
                  "type": "reducer",
                  "info": "The sum of values",
                  "ID": 1833
                },
                {
                  "name": "proportion",
                  "type": "reducer",
                  "info": "The sum proportional to the overall total (weighted frequency)",
                  "ID": 1834
                },
                {
                  "name": "proportion-facet",
                  "type": "reducer",
                  "info": "The sum proportional to the facet total",
                  "ID": 1835
                },
                {
                  "name": "min",
                  "type": "reducer",
                  "info": "The minimum value",
                  "ID": 1836
                },
                {
                  "name": "max",
                  "type": "reducer",
                  "info": "The maximum value",
                  "ID": 1837
                },
                {
                  "name": "mean",
                  "type": "reducer",
                  "info": "The mean value (average)",
                  "ID": 1838
                },
                {
                  "name": "median",
                  "type": "reducer",
                  "info": "The median value",
                  "ID": 1839
                },
                {
                  "name": "deviation",
                  "type": "reducer",
                  "info": "The standard deviation",
                  "ID": 1840
                },
                {
                  "name": "variance",
                  "type": "reducer",
                  "info": "The variance per Welford's algorithm",
                  "ID": 1841
                },
                {
                  "name": "function",
                  "type": "reducer function",
                  "info": "A function to be passed the array of values for each bin",
                  "ID": 1842
                },
                {
                  "name": "object",
                  "type": "reducer object",
                  "info": "An object with a reduce method",
                  "ID": 1843
                }
              ],
              "ID": 1829
            }
          ],
          "info": "",
          "ID": 1541
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the bin bound to the x scale",
              "ID": 1561
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the bin bound to the x scale",
              "ID": 1562
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal center of the bin bound to the x scale",
              "ID": 1563
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the bin bound to the y scale",
              "ID": 1564
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the bin bound to the y scale",
              "ID": 1565
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical center of the bin bound to the y scale",
              "ID": 1566
            },
            {
              "name": "z",
              "type": "channel",
              "info": "Additional aggregation channel",
              "ID": 1567
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "rx",
              "type": "constant number",
              "info": "The x-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 1578
            },
            {
              "name": "ry",
              "type": "constant number",
              "info": "The y-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 1579
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            },
            {
              "name": "thresholds",
              "type": "object",
              "info": "The threshold values for the bins",
              "children": [
                {
                  "name": "'freedman-diaconis'",
                  "type": "string literal",
                  "info": "The Freedman–Diaconis rule",
                  "ID": 1611
                },
                {
                  "name": "'scott'",
                  "type": "string literal",
                  "info": "The Scott’s normal reference rule. This is the default",
                  "ID": 1612
                },
                {
                  "name": "'sturges'",
                  "type": "string literal",
                  "info": "The Sturges’ formula",
                  "ID": 1613
                },
                {
                  "name": "n",
                  "type": "constant number",
                  "info": "A count (hint) representing the desired number of bins",
                  "ID": 1614
                },
                {
                  "name": "[]",
                  "type": "array",
                  "info": "An array of n threshold values for n + 1 bins",
                  "ID": 1615
                },
                {
                  "name": "[]",
                  "type": "time interval",
                  "info": "A time interval (for temporal binning)",
                  "ID": 1616
                },
                {
                  "name": "f()",
                  "type": "function",
                  "info": "A function that returns an array, count, or time interval",
                  "ID": 1617
                }
              ],
              "ID": 1610
            },
            {
              "name": "domain",
              "type": "array",
              "info": "The values outside the domain will be omitted",
              "ID": 1618
            },
            {
              "name": "cumulative",
              "type": "constant number",
              "info": "If positive, each bin will contain all lesser bins. If negative, each bin will contain all greater bins rather than all lesser bins, representing the complementary cumulative distribution",
              "ID": 1619
            }
          ],
          "ID": 1557
        }
      ],
      "info": "Bins on y. Also groups on y and the first channel of z, fill, or stroke, if any. It changes the defaults for insetTop, insetBottom to a total of 1 pixel",
      "ID": 1540
    },
    {
      "name": ".group()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "outputs",
          "children": [
            {
              "name": "channel",
              "type": "output",
              "info": "The channel to be aggregated by a specific aggregation method. Most aggregation methods require referencing a specific subset of data. Then, the output channel has to be also to bound an input channel",
              "children": [
                {
                  "name": "first",
                  "type": "reducer",
                  "info": "The first value in input order",
                  "ID": 1830
                },
                {
                  "name": "last",
                  "type": "reducer",
                  "info": "The last value in input order",
                  "ID": 1831
                },
                {
                  "name": "count",
                  "type": "reducer",
                  "info": "The number of elements (frequency)",
                  "ID": 1832
                },
                {
                  "name": "sum",
                  "type": "reducer",
                  "info": "The sum of values",
                  "ID": 1833
                },
                {
                  "name": "proportion",
                  "type": "reducer",
                  "info": "The sum proportional to the overall total (weighted frequency)",
                  "ID": 1834
                },
                {
                  "name": "proportion-facet",
                  "type": "reducer",
                  "info": "The sum proportional to the facet total",
                  "ID": 1835
                },
                {
                  "name": "min",
                  "type": "reducer",
                  "info": "The minimum value",
                  "ID": 1836
                },
                {
                  "name": "max",
                  "type": "reducer",
                  "info": "The maximum value",
                  "ID": 1837
                },
                {
                  "name": "mean",
                  "type": "reducer",
                  "info": "The mean value (average)",
                  "ID": 1838
                },
                {
                  "name": "median",
                  "type": "reducer",
                  "info": "The median value",
                  "ID": 1839
                },
                {
                  "name": "deviation",
                  "type": "reducer",
                  "info": "The standard deviation",
                  "ID": 1840
                },
                {
                  "name": "variance",
                  "type": "reducer",
                  "info": "The variance per Welford's algorithm",
                  "ID": 1841
                },
                {
                  "name": "function",
                  "type": "reducer function",
                  "info": "A function to be passed the array of values for each bin",
                  "ID": 1842
                },
                {
                  "name": "object",
                  "type": "reducer object",
                  "info": "An object with a reduce method",
                  "ID": 1843
                }
              ],
              "ID": 1829
            }
          ],
          "info": "",
          "ID": 1621
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the group",
              "ID": 1641
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the group",
              "ID": 1642
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the group",
              "ID": 1643
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the group",
              "ID": 1644
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the group",
              "ID": 1645
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the group",
              "ID": 1646
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "rx",
              "type": "constant number",
              "info": "The x-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 1657
            },
            {
              "name": "ry",
              "type": "constant number",
              "info": "The y-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 1658
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 1637
        }
      ],
      "info": "Groups on x, y, and the first channel of z, fill, or stroke, if any",
      "ID": 1620
    },
    {
      "name": ".groupX()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "outputs",
          "children": [
            {
              "name": "channel",
              "type": "output",
              "info": "The channel to be aggregated by a specific aggregation method. Most aggregation methods require referencing a specific subset of data. Then, the output channel has to be also to bound an input channel",
              "children": [
                {
                  "name": "first",
                  "type": "reducer",
                  "info": "The first value in input order",
                  "ID": 1830
                },
                {
                  "name": "last",
                  "type": "reducer",
                  "info": "The last value in input order",
                  "ID": 1831
                },
                {
                  "name": "count",
                  "type": "reducer",
                  "info": "The number of elements (frequency)",
                  "ID": 1832
                },
                {
                  "name": "sum",
                  "type": "reducer",
                  "info": "The sum of values",
                  "ID": 1833
                },
                {
                  "name": "proportion",
                  "type": "reducer",
                  "info": "The sum proportional to the overall total (weighted frequency)",
                  "ID": 1834
                },
                {
                  "name": "proportion-facet",
                  "type": "reducer",
                  "info": "The sum proportional to the facet total",
                  "ID": 1835
                },
                {
                  "name": "min",
                  "type": "reducer",
                  "info": "The minimum value",
                  "ID": 1836
                },
                {
                  "name": "max",
                  "type": "reducer",
                  "info": "The maximum value",
                  "ID": 1837
                },
                {
                  "name": "mean",
                  "type": "reducer",
                  "info": "The mean value (average)",
                  "ID": 1838
                },
                {
                  "name": "median",
                  "type": "reducer",
                  "info": "The median value",
                  "ID": 1839
                },
                {
                  "name": "deviation",
                  "type": "reducer",
                  "info": "The standard deviation",
                  "ID": 1840
                },
                {
                  "name": "variance",
                  "type": "reducer",
                  "info": "The variance per Welford's algorithm",
                  "ID": 1841
                },
                {
                  "name": "function",
                  "type": "reducer function",
                  "info": "A function to be passed the array of values for each bin",
                  "ID": 1842
                },
                {
                  "name": "object",
                  "type": "reducer object",
                  "info": "An object with a reduce method",
                  "ID": 1843
                }
              ],
              "ID": 1829
            }
          ],
          "info": "",
          "ID": 1690
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the group",
              "ID": 1710
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the group",
              "ID": 1711
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the group",
              "ID": 1712
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the group",
              "ID": 1713
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the group",
              "ID": 1714
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the group",
              "ID": 1715
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "rx",
              "type": "constant number",
              "info": "The x-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 1726
            },
            {
              "name": "ry",
              "type": "constant number",
              "info": "The y-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 1727
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 1706
        }
      ],
      "info": "Groups on x and the first channel of z, fill, or stroke, if any",
      "ID": 1689
    },
    {
      "name": ".groupY()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "outputs",
          "children": [
            {
              "name": "channel",
              "type": "output",
              "info": "The channel to be aggregated by a specific aggregation method. Most aggregation methods require referencing a specific subset of data. Then, the output channel has to be also to bound an input channel",
              "children": [
                {
                  "name": "first",
                  "type": "reducer",
                  "info": "The first value in input order",
                  "ID": 1830
                },
                {
                  "name": "last",
                  "type": "reducer",
                  "info": "The last value in input order",
                  "ID": 1831
                },
                {
                  "name": "count",
                  "type": "reducer",
                  "info": "The number of elements (frequency)",
                  "ID": 1832
                },
                {
                  "name": "sum",
                  "type": "reducer",
                  "info": "The sum of values",
                  "ID": 1833
                },
                {
                  "name": "proportion",
                  "type": "reducer",
                  "info": "The sum proportional to the overall total (weighted frequency)",
                  "ID": 1834
                },
                {
                  "name": "proportion-facet",
                  "type": "reducer",
                  "info": "The sum proportional to the facet total",
                  "ID": 1835
                },
                {
                  "name": "min",
                  "type": "reducer",
                  "info": "The minimum value",
                  "ID": 1836
                },
                {
                  "name": "max",
                  "type": "reducer",
                  "info": "The maximum value",
                  "ID": 1837
                },
                {
                  "name": "mean",
                  "type": "reducer",
                  "info": "The mean value (average)",
                  "ID": 1838
                },
                {
                  "name": "median",
                  "type": "reducer",
                  "info": "The median value",
                  "ID": 1839
                },
                {
                  "name": "deviation",
                  "type": "reducer",
                  "info": "The standard deviation",
                  "ID": 1840
                },
                {
                  "name": "variance",
                  "type": "reducer",
                  "info": "The variance per Welford's algorithm",
                  "ID": 1841
                },
                {
                  "name": "function",
                  "type": "reducer function",
                  "info": "A function to be passed the array of values for each bin",
                  "ID": 1842
                },
                {
                  "name": "object",
                  "type": "reducer object",
                  "info": "An object with a reduce method",
                  "ID": 1843
                }
              ],
              "ID": 1829
            }
          ],
          "info": "",
          "ID": 1759
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the group",
              "ID": 1779
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the group",
              "ID": 1780
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the group",
              "ID": 1781
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the group",
              "ID": 1782
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the group",
              "ID": 1783
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the group",
              "ID": 1784
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "rx",
              "type": "constant number",
              "info": "The x-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 1795
            },
            {
              "name": "ry",
              "type": "constant number",
              "info": "The y-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 1796
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 1775
        }
      ],
      "info": "Groups on y and the first channel of z, fill, or stroke, if any",
      "ID": 1758
    },
    {
      "name": ".groupZ()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "outputs",
          "children": [
            {
              "name": "channel",
              "type": "output",
              "info": "The channel to be aggregated by a specific aggregation method. Most aggregation methods require referencing a specific subset of data. Then, the output channel has to be also to bound an input channel",
              "children": [
                {
                  "name": "first",
                  "type": "reducer",
                  "info": "The first value in input order",
                  "ID": 1830
                },
                {
                  "name": "last",
                  "type": "reducer",
                  "info": "The last value in input order",
                  "ID": 1831
                },
                {
                  "name": "count",
                  "type": "reducer",
                  "info": "The number of elements (frequency)",
                  "ID": 1832
                },
                {
                  "name": "sum",
                  "type": "reducer",
                  "info": "The sum of values",
                  "ID": 1833
                },
                {
                  "name": "proportion",
                  "type": "reducer",
                  "info": "The sum proportional to the overall total (weighted frequency)",
                  "ID": 1834
                },
                {
                  "name": "proportion-facet",
                  "type": "reducer",
                  "info": "The sum proportional to the facet total",
                  "ID": 1835
                },
                {
                  "name": "min",
                  "type": "reducer",
                  "info": "The minimum value",
                  "ID": 1836
                },
                {
                  "name": "max",
                  "type": "reducer",
                  "info": "The maximum value",
                  "ID": 1837
                },
                {
                  "name": "mean",
                  "type": "reducer",
                  "info": "The mean value (average)",
                  "ID": 1838
                },
                {
                  "name": "median",
                  "type": "reducer",
                  "info": "The median value",
                  "ID": 1839
                },
                {
                  "name": "deviation",
                  "type": "reducer",
                  "info": "The standard deviation",
                  "ID": 1840
                },
                {
                  "name": "variance",
                  "type": "reducer",
                  "info": "The variance per Welford's algorithm",
                  "ID": 1841
                },
                {
                  "name": "function",
                  "type": "reducer function",
                  "info": "A function to be passed the array of values for each bin",
                  "ID": 1842
                },
                {
                  "name": "object",
                  "type": "reducer object",
                  "info": "An object with a reduce method",
                  "ID": 1843
                }
              ],
              "ID": 1829
            }
          ],
          "info": "",
          "ID": 1828
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the group",
              "ID": 1848
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the group",
              "ID": 1849
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the group",
              "ID": 1850
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the group",
              "ID": 1851
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the group",
              "ID": 1852
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the group",
              "ID": 1853
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "rx",
              "type": "constant number",
              "info": "The x-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 1864
            },
            {
              "name": "ry",
              "type": "constant number",
              "info": "The y-radius for rounded corners specified in either pixels or percentages (strings). Default is 0",
              "ID": 1865
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 1844
        }
      ],
      "info": "Groups on the first channel of z, fill, or stroke, if any. If none of z, fill, or stroke are channels, then all data (within each facet) is placed into a single group",
      "ID": 1827
    },
    {
      "name": ".map()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "outputs",
          "children": [
            {
              "name": "channel",
              "type": "output",
              "children": [
                {
                  "name": "'cumsum'",
                  "type": "map",
                  "info": "The cumulative sum",
                  "ID": 1899
                },
                {
                  "name": "function",
                  "type": "map",
                  "info": "A function to be passed the array of values, returning new values",
                  "ID": 1900
                },
                {
                  "name": "object",
                  "type": "map",
                  "info": "An object that implements the map method",
                  "ID": 1901
                }
              ],
              "ID": 1898
            }
          ],
          "info": "",
          "ID": 1897
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the series",
              "ID": 1906
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the series",
              "ID": 1907
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the series",
              "ID": 1908
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the series",
              "ID": 1909
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the series",
              "ID": 1910
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the series",
              "ID": 1911
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 1902
        }
      ],
      "info": "Groups on the first channel of z, fill, or stroke, if any, and then for each channel declared in the specified outputs object, applies the corresponding map method. Each channel in outputs must have a corresponding input channel in options",
      "ID": 1896
    },
    {
      "name": ".mapX()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "outputs",
          "children": [
            {
              "name": "'cumsum'",
              "type": "map",
              "info": "The cumulative sum",
              "ID": 1954
            },
            {
              "name": "function",
              "type": "map",
              "info": "A function to be passed the array of values, returning new values",
              "ID": 1955
            },
            {
              "name": "object",
              "type": "map",
              "info": "An object that implements the map method",
              "ID": 1956
            }
          ],
          "info": "",
          "ID": 1953
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the series",
              "ID": 1961
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the series",
              "ID": 1962
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the series",
              "ID": 1963
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the series",
              "ID": 1964
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the series",
              "ID": 1965
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the series",
              "ID": 1966
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 1957
        }
      ],
      "info": "Equivalent to Plot.map({x: map, x1: map, x2: map}, options), but ignores any of x, x1, and x2 not present in options",
      "ID": 1952
    },
    {
      "name": ".mapY()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "outputs",
          "children": [
            {
              "name": "'cumsum'",
              "type": "map",
              "info": "The cumulative sum",
              "ID": 2009
            },
            {
              "name": "function",
              "type": "map",
              "info": "A function to be passed the array of values, returning new values",
              "ID": 2010
            },
            {
              "name": "object",
              "type": "map",
              "info": "An object that implements the map method",
              "ID": 2011
            }
          ],
          "info": "",
          "ID": 2008
        },
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the series",
              "ID": 2016
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the series",
              "ID": 2017
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the series",
              "ID": 2018
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the series",
              "ID": 2019
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the series",
              "ID": 2020
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the series",
              "ID": 2021
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 2012
        }
      ],
      "info": "Equivalent to Plot.map({y: map, y1: map, y2: map}, options), but ignores any of y, y1, and y2 not present in options",
      "ID": 2007
    },
    {
      "name": ".normalizeX()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "basis",
              "type": "constant string",
              "info": "The basis option specifies how to normalize the series values",
              "children": [
                {
                  "name": "'first'",
                  "type": "string literal",
                  "info": "The first value, as in an index chart. (the default)",
                  "ID": 2123
                },
                {
                  "name": "'last'",
                  "type": "string literal",
                  "info": "The last value",
                  "ID": 2124
                },
                {
                  "name": "'mean'",
                  "type": "string literal",
                  "info": "The mean value (average)",
                  "ID": 2125
                },
                {
                  "name": "'sum'",
                  "type": "string literal",
                  "info": "The sum of values",
                  "ID": 2126
                },
                {
                  "name": "'extend'",
                  "type": "string literal",
                  "info": "The minimum is mapped to zero, and the maximum to one",
                  "ID": 2127
                },
                {
                  "name": "f()",
                  "type": "function",
                  "info": "A function to be passed an array of values, returning the desired basis",
                  "ID": 2128
                }
              ],
              "ID": 2122
            },
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the series",
              "ID": 2074
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the series",
              "ID": 2075
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the series",
              "ID": 2076
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the series",
              "ID": 2077
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the series",
              "ID": 2078
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the series",
              "ID": 2079
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 2063
        }
      ],
      "info": "Like Plot.mapX, but applies the normalize map method with the given options",
      "ID": 2062
    },
    {
      "name": ".normalizeY()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "basis",
              "type": "constant string",
              "info": "The basis option specifies how to normalize the series values",
              "children": [
                {
                  "name": "'first'",
                  "type": "string literal",
                  "info": "The first value, as in an index chart. (the default)",
                  "ID": 2123
                },
                {
                  "name": "'last'",
                  "type": "string literal",
                  "info": "The last value",
                  "ID": 2124
                },
                {
                  "name": "'mean'",
                  "type": "string literal",
                  "info": "The mean value (average)",
                  "ID": 2125
                },
                {
                  "name": "'sum'",
                  "type": "string literal",
                  "info": "The sum of values",
                  "ID": 2126
                },
                {
                  "name": "'extend'",
                  "type": "string literal",
                  "info": "The minimum is mapped to zero, and the maximum to one",
                  "ID": 2127
                },
                {
                  "name": "f()",
                  "type": "function",
                  "info": "A function to be passed an array of values, returning the desired basis",
                  "ID": 2128
                }
              ],
              "ID": 2122
            },
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the series",
              "ID": 2132
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the series",
              "ID": 2133
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the series",
              "ID": 2134
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the series",
              "ID": 2135
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the series",
              "ID": 2136
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the series",
              "ID": 2137
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 2121
        }
      ],
      "info": "Like Plot.mapY, but applies the normalize map method with the given options",
      "ID": 2120
    },
    {
      "name": ".windowX()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "k",
              "type": "constant number",
              "info": "The window size (the number of elements in the window)",
              "ID": 2180
            },
            {
              "name": "shift",
              "type": "constant string",
              "info": "Alignment of the window",
              "children": [
                {
                  "name": "'centered'",
                  "type": "string literal",
                  "info": "Center window",
                  "ID": 2182
                },
                {
                  "name": "'leading'",
                  "type": "string literal",
                  "info": "Leading window",
                  "ID": 2183
                },
                {
                  "name": "'trailing'",
                  "type": "string literal",
                  "info": "Trailing window",
                  "ID": 2184
                }
              ],
              "ID": 2181
            },
            {
              "name": "reduce",
              "type": "constant string",
              "info": "The aggregation method (window reducer)",
              "children": [
                {
                  "name": "'min'",
                  "type": "string literal",
                  "info": "The minimum",
                  "ID": 2253
                },
                {
                  "name": "'max'",
                  "type": "string literal",
                  "info": "The maximum",
                  "ID": 2254
                },
                {
                  "name": "'mean'",
                  "type": "string literal",
                  "info": "The mean value (average)",
                  "ID": 2255
                },
                {
                  "name": "'median'",
                  "type": "string literal",
                  "info": "The median value",
                  "ID": 2256
                },
                {
                  "name": "'sum'",
                  "type": "string literal",
                  "info": "The sum of values",
                  "ID": 2257
                },
                {
                  "name": "'deviation'",
                  "type": "string literal",
                  "info": "The standard deviation",
                  "ID": 2258
                },
                {
                  "name": "'variance'",
                  "type": "string literal",
                  "info": "The variance per Welford’s algorithm",
                  "ID": 2259
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "info": "The difference between the last and first window value",
                  "ID": 2260
                },
                {
                  "name": "'ratio'",
                  "type": "string literal",
                  "info": "The ratio of the last and first window value",
                  "ID": 2261
                },
                {
                  "name": "f()",
                  "type": "function",
                  "info": "A function to be passed an array of values, returning the desired basis",
                  "ID": 2262
                }
              ],
              "ID": 2252
            },
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the series",
              "ID": 2199
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the series",
              "ID": 2200
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the series",
              "ID": 2201
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the series",
              "ID": 2202
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the series",
              "ID": 2203
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the series",
              "ID": 2204
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 2179
        }
      ],
      "info": "Like Plot.mapX, but applies the window map method with the given options",
      "ID": 2178
    },
    {
      "name": ".windowY()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "k",
              "type": "constant number",
              "info": "The window size (the number of elements in the window)",
              "ID": 2247
            },
            {
              "name": "shift",
              "type": "constant string",
              "info": "Alignment of the window",
              "children": [
                {
                  "name": "'centered'",
                  "type": "string literal",
                  "info": "Center window",
                  "ID": 2249
                },
                {
                  "name": "'leading'",
                  "type": "string literal",
                  "info": "Leading window",
                  "ID": 2250
                },
                {
                  "name": "'trailing'",
                  "type": "string literal",
                  "info": "Trailing window",
                  "ID": 2251
                }
              ],
              "ID": 2248
            },
            {
              "name": "reduce",
              "type": "constant string",
              "info": "The aggregation method (window reducer)",
              "children": [
                {
                  "name": "'min'",
                  "type": "string literal",
                  "info": "The minimum",
                  "ID": 2253
                },
                {
                  "name": "'max'",
                  "type": "string literal",
                  "info": "The maximum",
                  "ID": 2254
                },
                {
                  "name": "'mean'",
                  "type": "string literal",
                  "info": "The mean value (average)",
                  "ID": 2255
                },
                {
                  "name": "'median'",
                  "type": "string literal",
                  "info": "The median value",
                  "ID": 2256
                },
                {
                  "name": "'sum'",
                  "type": "string literal",
                  "info": "The sum of values",
                  "ID": 2257
                },
                {
                  "name": "'deviation'",
                  "type": "string literal",
                  "info": "The standard deviation",
                  "ID": 2258
                },
                {
                  "name": "'variance'",
                  "type": "string literal",
                  "info": "The variance per Welford’s algorithm",
                  "ID": 2259
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "info": "The difference between the last and first window value",
                  "ID": 2260
                },
                {
                  "name": "'ratio'",
                  "type": "string literal",
                  "info": "The ratio of the last and first window value",
                  "ID": 2261
                },
                {
                  "name": "f()",
                  "type": "function",
                  "info": "A function to be passed an array of values, returning the desired basis",
                  "ID": 2262
                }
              ],
              "ID": 2252
            },
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the series",
              "ID": 2266
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the series",
              "ID": 2267
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the series",
              "ID": 2268
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the series",
              "ID": 2269
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the series",
              "ID": 2270
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the series",
              "ID": 2271
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 2246
        }
      ],
      "info": "Like Plot.mapY, but applies the window map method with the given options",
      "ID": 2245
    },
    {
      "name": ".stackX()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "offset",
              "type": "constant string",
              "info": "The offset (or baseline) method",
              "children": [
                {
                  "name": "'null'",
                  "type": "string literal",
                  "info": "A zero baseline (default)",
                  "ID": 2630
                },
                {
                  "name": "'expand'",
                  "type": "string literal",
                  "info": "Rescale each stack to fill [0, 1]",
                  "ID": 2631
                },
                {
                  "name": "'silhouette'",
                  "type": "string literal",
                  "info": "Align the centers of all stacks",
                  "ID": 2632
                },
                {
                  "name": "'wiggle'",
                  "type": "string literal",
                  "info": "Translate stacks to minimize apparent movement",
                  "ID": 2633
                }
              ],
              "ID": 2629
            },
            {
              "name": "order",
              "type": "constant string",
              "info": "The order in which stacks are layered",
              "children": [
                {
                  "name": "'null'",
                  "type": "string literal",
                  "info": "The input order (default)",
                  "ID": 2635
                },
                {
                  "name": "'value'",
                  "type": "string literal",
                  "info": "The ascending value order (or descending with reverse)",
                  "ID": 2636
                },
                {
                  "name": "'sum'",
                  "type": "string literal",
                  "info": "Order series by their total value",
                  "ID": 2637
                },
                {
                  "name": "'appearance'",
                  "type": "string literal",
                  "info": "Order series by the position of their maximum value",
                  "ID": 2638
                },
                {
                  "name": "'inside-out'",
                  "type": "string literal",
                  "info": "order the earliest-appearing series on the inside",
                  "ID": 2639
                },
                {
                  "name": "[]",
                  "type": "array",
                  "info": "An array of z values",
                  "ID": 2640
                }
              ],
              "ID": 2634
            },
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the series",
              "ID": 2329
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the series",
              "ID": 2330
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the series",
              "ID": 2331
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the series",
              "ID": 2332
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the series",
              "ID": 2333
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the series",
              "ID": 2334
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 2313
        }
      ],
      "info": "Creates new channels x1 and x2, obtained by stacking the original x channel for data points that share a common y (and possibly z) value. A new x channel is also returned, which lazily computes the middle value of y1 and y2. The input x channel defaults to a constant 1, resulting in a count of the data points.",
      "ID": 2312
    },
    {
      "name": ".stackX1()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "offset",
              "type": "constant string",
              "info": "The offset (or baseline) method",
              "children": [
                {
                  "name": "'null'",
                  "type": "string literal",
                  "info": "A zero baseline (default)",
                  "ID": 2630
                },
                {
                  "name": "'expand'",
                  "type": "string literal",
                  "info": "Rescale each stack to fill [0, 1]",
                  "ID": 2631
                },
                {
                  "name": "'silhouette'",
                  "type": "string literal",
                  "info": "Align the centers of all stacks",
                  "ID": 2632
                },
                {
                  "name": "'wiggle'",
                  "type": "string literal",
                  "info": "Translate stacks to minimize apparent movement",
                  "ID": 2633
                }
              ],
              "ID": 2629
            },
            {
              "name": "order",
              "type": "constant string",
              "info": "The order in which stacks are layered",
              "children": [
                {
                  "name": "'null'",
                  "type": "string literal",
                  "info": "The input order (default)",
                  "ID": 2635
                },
                {
                  "name": "'value'",
                  "type": "string literal",
                  "info": "The ascending value order (or descending with reverse)",
                  "ID": 2636
                },
                {
                  "name": "'sum'",
                  "type": "string literal",
                  "info": "Order series by their total value",
                  "ID": 2637
                },
                {
                  "name": "'appearance'",
                  "type": "string literal",
                  "info": "Order series by the position of their maximum value",
                  "ID": 2638
                },
                {
                  "name": "'inside-out'",
                  "type": "string literal",
                  "info": "order the earliest-appearing series on the inside",
                  "ID": 2639
                },
                {
                  "name": "[]",
                  "type": "array",
                  "info": "An array of z values",
                  "ID": 2640
                }
              ],
              "ID": 2634
            },
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the series",
              "ID": 2392
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the series",
              "ID": 2393
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the series",
              "ID": 2394
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the series",
              "ID": 2395
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the series",
              "ID": 2396
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the series",
              "ID": 2397
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 2376
        }
      ],
      "info": "Equivalent to Plot.stackX, except that the x1 channel is returned as the x channel. This can be used, for example, to draw a line at the left edge of each stacked area",
      "ID": 2375
    },
    {
      "name": ".stackX2()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "offset",
              "type": "constant string",
              "info": "The offset (or baseline) method",
              "children": [
                {
                  "name": "'null'",
                  "type": "string literal",
                  "info": "A zero baseline (default)",
                  "ID": 2630
                },
                {
                  "name": "'expand'",
                  "type": "string literal",
                  "info": "Rescale each stack to fill [0, 1]",
                  "ID": 2631
                },
                {
                  "name": "'silhouette'",
                  "type": "string literal",
                  "info": "Align the centers of all stacks",
                  "ID": 2632
                },
                {
                  "name": "'wiggle'",
                  "type": "string literal",
                  "info": "Translate stacks to minimize apparent movement",
                  "ID": 2633
                }
              ],
              "ID": 2629
            },
            {
              "name": "order",
              "type": "constant string",
              "info": "The order in which stacks are layered",
              "children": [
                {
                  "name": "'null'",
                  "type": "string literal",
                  "info": "The input order (default)",
                  "ID": 2635
                },
                {
                  "name": "'value'",
                  "type": "string literal",
                  "info": "The ascending value order (or descending with reverse)",
                  "ID": 2636
                },
                {
                  "name": "'sum'",
                  "type": "string literal",
                  "info": "Order series by their total value",
                  "ID": 2637
                },
                {
                  "name": "'appearance'",
                  "type": "string literal",
                  "info": "Order series by the position of their maximum value",
                  "ID": 2638
                },
                {
                  "name": "'inside-out'",
                  "type": "string literal",
                  "info": "order the earliest-appearing series on the inside",
                  "ID": 2639
                },
                {
                  "name": "[]",
                  "type": "array",
                  "info": "An array of z values",
                  "ID": 2640
                }
              ],
              "ID": 2634
            },
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the series",
              "ID": 2455
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the series",
              "ID": 2456
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the series",
              "ID": 2457
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the series",
              "ID": 2458
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the series",
              "ID": 2459
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the series",
              "ID": 2460
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 2439
        }
      ],
      "info": "Equivalent to Plot.stackX, except that the x2 channel is returned as the x channel. This can be used, for example, to draw a line at the right edge of each stacked area",
      "ID": 2438
    },
    {
      "name": ".stackY()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "offset",
              "type": "constant string",
              "info": "The offset (or baseline) method",
              "children": [
                {
                  "name": "'null'",
                  "type": "string literal",
                  "info": "A zero baseline (default)",
                  "ID": 2630
                },
                {
                  "name": "'expand'",
                  "type": "string literal",
                  "info": "Rescale each stack to fill [0, 1]",
                  "ID": 2631
                },
                {
                  "name": "'silhouette'",
                  "type": "string literal",
                  "info": "Align the centers of all stacks",
                  "ID": 2632
                },
                {
                  "name": "'wiggle'",
                  "type": "string literal",
                  "info": "Translate stacks to minimize apparent movement",
                  "ID": 2633
                }
              ],
              "ID": 2629
            },
            {
              "name": "order",
              "type": "constant string",
              "info": "The order in which stacks are layered",
              "children": [
                {
                  "name": "'null'",
                  "type": "string literal",
                  "info": "The input order (default)",
                  "ID": 2635
                },
                {
                  "name": "'value'",
                  "type": "string literal",
                  "info": "The ascending value order (or descending with reverse)",
                  "ID": 2636
                },
                {
                  "name": "'sum'",
                  "type": "string literal",
                  "info": "Order series by their total value",
                  "ID": 2637
                },
                {
                  "name": "'appearance'",
                  "type": "string literal",
                  "info": "Order series by the position of their maximum value",
                  "ID": 2638
                },
                {
                  "name": "'inside-out'",
                  "type": "string literal",
                  "info": "order the earliest-appearing series on the inside",
                  "ID": 2639
                },
                {
                  "name": "[]",
                  "type": "array",
                  "info": "An array of z values",
                  "ID": 2640
                }
              ],
              "ID": 2634
            },
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the series",
              "ID": 2518
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the series",
              "ID": 2519
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the series",
              "ID": 2520
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the series",
              "ID": 2521
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the series",
              "ID": 2522
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the series",
              "ID": 2523
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 2502
        }
      ],
      "info": "Creates new channels y1 and y2, obtained by stacking the original y channel for data points that share a common x (and possibly z) value. A new y channel is also returned, which lazily computes the middle value of y1 and y2. The input y channel defaults to a constant 1, resulting in a count of the data points",
      "ID": 2501
    },
    {
      "name": ".stackY1()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "offset",
              "type": "constant string",
              "info": "The offset (or baseline) method",
              "children": [
                {
                  "name": "'null'",
                  "type": "string literal",
                  "info": "A zero baseline (default)",
                  "ID": 2630
                },
                {
                  "name": "'expand'",
                  "type": "string literal",
                  "info": "Rescale each stack to fill [0, 1]",
                  "ID": 2631
                },
                {
                  "name": "'silhouette'",
                  "type": "string literal",
                  "info": "Align the centers of all stacks",
                  "ID": 2632
                },
                {
                  "name": "'wiggle'",
                  "type": "string literal",
                  "info": "Translate stacks to minimize apparent movement",
                  "ID": 2633
                }
              ],
              "ID": 2629
            },
            {
              "name": "order",
              "type": "constant string",
              "info": "The order in which stacks are layered",
              "children": [
                {
                  "name": "'null'",
                  "type": "string literal",
                  "info": "The input order (default)",
                  "ID": 2635
                },
                {
                  "name": "'value'",
                  "type": "string literal",
                  "info": "The ascending value order (or descending with reverse)",
                  "ID": 2636
                },
                {
                  "name": "'sum'",
                  "type": "string literal",
                  "info": "Order series by their total value",
                  "ID": 2637
                },
                {
                  "name": "'appearance'",
                  "type": "string literal",
                  "info": "Order series by the position of their maximum value",
                  "ID": 2638
                },
                {
                  "name": "'inside-out'",
                  "type": "string literal",
                  "info": "order the earliest-appearing series on the inside",
                  "ID": 2639
                },
                {
                  "name": "[]",
                  "type": "array",
                  "info": "An array of z values",
                  "ID": 2640
                }
              ],
              "ID": 2634
            },
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the series",
              "ID": 2581
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the series",
              "ID": 2582
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the series",
              "ID": 2583
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the series",
              "ID": 2584
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the series",
              "ID": 2585
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the series",
              "ID": 2586
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 2565
        }
      ],
      "info": "Equivalent to Plot.stackY, except that the y1 channel is returned as the y channel. This can be used, for example, to draw a line at the bottom of each stacked area",
      "ID": 2564
    },
    {
      "name": ".stackY2()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "offset",
              "type": "constant string",
              "info": "The offset (or baseline) method",
              "children": [
                {
                  "name": "'null'",
                  "type": "string literal",
                  "info": "A zero baseline (default)",
                  "ID": 2630
                },
                {
                  "name": "'expand'",
                  "type": "string literal",
                  "info": "Rescale each stack to fill [0, 1]",
                  "ID": 2631
                },
                {
                  "name": "'silhouette'",
                  "type": "string literal",
                  "info": "Align the centers of all stacks",
                  "ID": 2632
                },
                {
                  "name": "'wiggle'",
                  "type": "string literal",
                  "info": "Translate stacks to minimize apparent movement",
                  "ID": 2633
                }
              ],
              "ID": 2629
            },
            {
              "name": "order",
              "type": "constant string",
              "info": "The order in which stacks are layered",
              "children": [
                {
                  "name": "'null'",
                  "type": "string literal",
                  "info": "The input order (default)",
                  "ID": 2635
                },
                {
                  "name": "'value'",
                  "type": "string literal",
                  "info": "The ascending value order (or descending with reverse)",
                  "ID": 2636
                },
                {
                  "name": "'sum'",
                  "type": "string literal",
                  "info": "Order series by their total value",
                  "ID": 2637
                },
                {
                  "name": "'appearance'",
                  "type": "string literal",
                  "info": "Order series by the position of their maximum value",
                  "ID": 2638
                },
                {
                  "name": "'inside-out'",
                  "type": "string literal",
                  "info": "order the earliest-appearing series on the inside",
                  "ID": 2639
                },
                {
                  "name": "[]",
                  "type": "array",
                  "info": "An array of z values",
                  "ID": 2640
                }
              ],
              "ID": 2634
            },
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the series",
              "ID": 2644
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the series",
              "ID": 2645
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the series",
              "ID": 2646
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the series",
              "ID": 2647
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the series",
              "ID": 2648
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the series",
              "ID": 2649
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 2628
        }
      ],
      "info": "Equivalent to Plot.stackY, except that the y2 channel is returned as the y channel. This can be used, for example, to draw a line at the top of each stacked area",
      "ID": 2627
    },
    {
      "name": ".selectFirst()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the series",
              "ID": 2695
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the series",
              "ID": 2696
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the series",
              "ID": 2697
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the series",
              "ID": 2698
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the series",
              "ID": 2699
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the series",
              "ID": 2700
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 2691
        }
      ],
      "info": "Selects the first point of each series according to input order",
      "ID": 2690
    },
    {
      "name": ".selectLast()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the series",
              "ID": 2746
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the series",
              "ID": 2747
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the series",
              "ID": 2748
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the series",
              "ID": 2749
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the series",
              "ID": 2750
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the series",
              "ID": 2751
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 2742
        }
      ],
      "info": "Selects the last point of each series according to input order",
      "ID": 2741
    },
    {
      "name": ".selectMinX()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the series",
              "ID": 2797
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the series",
              "ID": 2798
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the series",
              "ID": 2799
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the series",
              "ID": 2800
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the series",
              "ID": 2801
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the series",
              "ID": 2802
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 2793
        }
      ],
      "info": "Selects the leftmost point of each series",
      "ID": 2792
    },
    {
      "name": ".selectMinY()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the series",
              "ID": 2848
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the series",
              "ID": 2849
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the series",
              "ID": 2850
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the series",
              "ID": 2851
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the series",
              "ID": 2852
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the series",
              "ID": 2853
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 2844
        }
      ],
      "info": "Selects the lowest point of each series",
      "ID": 2843
    },
    {
      "name": ".selectMaxX()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the series",
              "ID": 2899
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the series",
              "ID": 2900
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the series",
              "ID": 2901
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the series",
              "ID": 2902
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the series",
              "ID": 2903
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the series",
              "ID": 2904
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 2895
        }
      ],
      "info": "Selects the rightmost point of each series",
      "ID": 2894
    },
    {
      "name": ".selectMaxY()",
      "type": "option transform",
      "children": [
        {
          "name": "{}",
          "type": "options",
          "children": [
            {
              "name": "filter",
              "type": "transform",
              "info": "Filters the data according to the specified accessor or values. It does not affect inferred scale domains",
              "ID": 2947
            },
            {
              "name": "sort",
              "type": "transform",
              "info": "Sorts the data according to the specified comparator, accessor, or values. If the sort option is a function but does not take exactly one argument, it is assumed to be a comparator function. Otherwise, the sort option is interpreted as a channel value definition and thus may be either as a column name, accessor function, or array of values",
              "ID": 2948
            },
            {
              "name": "reverse",
              "type": "transform",
              "info": "Reverses the sorted (or if not sorted, the input) data order",
              "ID": 2949
            },
            {
              "name": "x1",
              "type": "channel",
              "info": "The starting horizontal position of the series",
              "ID": 2950
            },
            {
              "name": "x2",
              "type": "channel",
              "info": "The ending horizontal position of the series",
              "ID": 2951
            },
            {
              "name": "x",
              "type": "channel",
              "info": "The horizontal position of the series",
              "ID": 2952
            },
            {
              "name": "y1",
              "type": "channel",
              "info": "The starting vertical position of the series",
              "ID": 2953
            },
            {
              "name": "y2",
              "type": "channel",
              "info": "The ending vertical position of the series",
              "ID": 2954
            },
            {
              "name": "y",
              "type": "channel",
              "info": "The vertical position of the series",
              "ID": 2955
            },
            {
              "name": "fill",
              "type": "channel",
              "info": "The fill color. If it is a channel it is bound to the color scale. Defaults to currentColor if the stroke is none, and to none otherwise.",
              "ID": 2956
            },
            {
              "name": "fillOpacity",
              "type": "channel",
              "info": "The fill opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2957
            },
            {
              "name": "stroke",
              "type": "channel",
              "info": "The stroke color. If it is a channel it is bound to the color scale. Default is none",
              "ID": 2958
            },
            {
              "name": "strokeOpacity",
              "type": "channel",
              "info": "The stroke opacity (a number between 0 and 1). If it is a channel it is bound to the opacity scale",
              "ID": 2959
            },
            {
              "name": "title",
              "type": "channel",
              "info": "The tooltip as a string of text, possibly with newlines",
              "ID": 2960
            },
            {
              "name": "insetTop",
              "type": "constant number",
              "info": "Adds spacing in pixels at the top for each element. Default is 0. Shorthand: inset",
              "ID": 2961
            },
            {
              "name": "insetRight",
              "type": "constant number",
              "info": "Adds spacing in pixels on the right for each element. Default is 0..Shorthand: inset",
              "ID": 2962
            },
            {
              "name": "insetBottom",
              "type": "constant number",
              "info": "Adds spacing in pixels at the bottom for each element. Default is 0. Shorthand: inset",
              "ID": 2963
            },
            {
              "name": "insetLeft",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left for each element. Default is 0. Shorthand: inset",
              "ID": 2964
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Adds spacing in pixels on the left, right, top and bottom. Default is 0. Shorthand for insetLeft, insetRight, insetTop, insetBottom",
              "ID": 2965
            },
            {
              "name": "strokeWidth",
              "type": "constant number",
              "info": "The stroke width in pixels",
              "ID": 2966
            },
            {
              "name": "strokeLinejoin",
              "type": "constant string",
              "children": [
                {
                  "name": "'arcs'",
                  "type": "string literal",
                  "ID": 2968
                },
                {
                  "name": "'bevel'",
                  "type": "string literal",
                  "ID": 2969
                },
                {
                  "name": "'miter'",
                  "type": "string literal",
                  "ID": 2970
                },
                {
                  "name": "'miter-clip'",
                  "type": "string literal",
                  "ID": 2971
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2972
                }
              ],
              "info": "The shape to be used at the corners of paths when they are stroked",
              "ID": 2967
            },
            {
              "name": "strokeLinecap",
              "type": "constant string",
              "children": [
                {
                  "name": "'butt'",
                  "type": "string literal",
                  "ID": 2974
                },
                {
                  "name": "'round'",
                  "type": "string literal",
                  "ID": 2975
                },
                {
                  "name": "'square'",
                  "type": "string literal",
                  "ID": 2976
                }
              ],
              "info": "The shape to be used at the end of open subpaths when they are stroked",
              "ID": 2973
            },
            {
              "name": "strokeMiterlimit",
              "type": "constant number",
              "info": "A limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel",
              "ID": 2977
            },
            {
              "name": "strokeDasharray",
              "type": "constant string",
              "info": "The pattern of dashes and gaps used to paint the outline of the shape",
              "ID": 2978
            },
            {
              "name": "mixBlendMode",
              "type": "constant string",
              "info": "This sets how an element's content should blend with the content of the element's parent and the element's background",
              "children": [
                {
                  "name": "'normal'",
                  "type": "string literal",
                  "ID": 2980
                },
                {
                  "name": "'multiply'",
                  "type": "string literal",
                  "ID": 2981
                },
                {
                  "name": "'screen'",
                  "type": "string literal",
                  "ID": 2982
                },
                {
                  "name": "'overlay'",
                  "type": "string literal",
                  "ID": 2983
                },
                {
                  "name": "'darken'",
                  "type": "string literal",
                  "ID": 2984
                },
                {
                  "name": "'lighten'",
                  "type": "string literal",
                  "ID": 2985
                },
                {
                  "name": "'color-dodge'",
                  "type": "string literal",
                  "ID": 2986
                },
                {
                  "name": "'color-burn'",
                  "type": "string literal",
                  "ID": 2987
                },
                {
                  "name": "'hard-light'",
                  "type": "string literal",
                  "ID": 2988
                },
                {
                  "name": "'soft-light'",
                  "type": "string literal",
                  "ID": 2989
                },
                {
                  "name": "'difference'",
                  "type": "string literal",
                  "ID": 2990
                },
                {
                  "name": "'exclusion'",
                  "type": "string literal",
                  "ID": 2991
                },
                {
                  "name": "'hue'",
                  "type": "string literal",
                  "ID": 2992
                },
                {
                  "name": "'saturation'",
                  "type": "string literal",
                  "ID": 2993
                },
                {
                  "name": "'color'",
                  "type": "string literal",
                  "ID": 2994
                },
                {
                  "name": "'luminosity'",
                  "type": "string literal",
                  "ID": 2995
                }
              ],
              "ID": 2979
            }
          ],
          "ID": 2946
        }
      ],
      "info": "Selects the highest point of each series",
      "ID": 2945
    },
    {
      "name": ".formatIsoDate()",
      "type": "format",
      "children": [
        {
          "name": "date",
          "type": "date",
          "children": [],
          "ID": 2997
        }
      ],
      "info": "This function takes one argument (date) and returns the shortest equivalent ISO 8601 UTC string",
      "ID": 2996
    },
    {
      "name": ".formatWeekday()",
      "type": "format",
      "children": [
        {
          "name": "locale",
          "type": "",
          "children": [],
          "ID": 2999
        },
        {
          "name": "format",
          "type": "",
          "children": [],
          "ID": 3000
        }
      ],
      "info": "This function takes two arguments (locale, format) and returns a function that formats a given week day number (from 0 = Sunday to 6 = Saturday) according to the specified locale and format. The locale is a BCP 47 language tag and defaults to U.S. English. The format is a weekday format: either narrow, short, or long; if not specified, it defaults to short",
      "ID": 2998
    },
    {
      "name": ".formatMonth()",
      "type": "format",
      "children": [
        {
          "name": "locale",
          "type": "",
          "children": [],
          "ID": 3002
        },
        {
          "name": "format",
          "type": "",
          "children": [],
          "ID": 3003
        }
      ],
      "info": "This function takes two arguments (locale, format) and returns a function that formats a given month number (from 0 = January to 11 = December) according to the specified locale and format. The locale is a BCP 47 language tag and defaults to U.S. English. The format is a month format: either 2-digit, numeric, narrow, short, long; if not specified, it defaults to short",
      "ID": 3001
    },
    {
      "name": ".plot()",
      "type": "options",
      "children": [
        {
          "name": "{}",
          "type": "options object",
          "children": [
            {
              "name": "facet",
              "type": "facet object",
              "children": [
                {
                  "name": "data",
                  "type": "data",
                  "info": "The data to be faceted",
                  "ID": 3007
                },
                {
                  "name": "x",
                  "type": "channel",
                  "info": "The horizontal position of a facet bound to the fx scale. The channel must be ordinal or categorical",
                  "ID": 3008
                },
                {
                  "name": "y",
                  "type": "channel",
                  "info": "The vertical position of a facet bound to the fy scale. The channel must be ordinal or categorical",
                  "ID": 3009
                },
                {
                  "name": "marginTop",
                  "type": "constant number",
                  "info": "The top margin in pixels",
                  "ID": 3010
                },
                {
                  "name": "marginRight",
                  "type": "constant number",
                  "info": "The right margin in pixels",
                  "ID": 3011
                },
                {
                  "name": "marginBottom",
                  "type": "constant number",
                  "info": "The bottom margin in pixels",
                  "ID": 3012
                },
                {
                  "name": "marginLeft",
                  "type": "constant number",
                  "info": "The left margin in pixels",
                  "ID": 3013
                },
                {
                  "name": "grid",
                  "type": "constant boolean",
                  "info": "Determines whether grid lines should be drawn for each facet",
                  "ID": 3014
                }
              ],
              "info": "Faceting: Marks whose data is strictly equal to (===) the facet data will be filtered within each facet to show the current facet’s subset, whereas other marks will be repeated across facets. You can disable faceting for an individual mark by giving it a shallow copy of the data, say using array.slice",
              "ID": 3006
            },
            {
              "name": "x",
              "type": "scale object",
              "children": [
                {
                  "name": "type",
                  "type": "constant string",
                  "children": [
                    {
                      "name": "'linear'",
                      "type": "quantitative data",
                      "info": "The default linear transform scale",
                      "ID": 3062
                    },
                    {
                      "name": "'pow'",
                      "type": "quantitative data",
                      "info": "The power (exponential) transform scale",
                      "ID": 3063
                    },
                    {
                      "name": "'sqrt'",
                      "type": "quantitative data",
                      "info": "The square-root transform (pow transform with exponent = 0.5) scale",
                      "ID": 3064
                    },
                    {
                      "name": "'log'",
                      "type": "quantitative data",
                      "info": "The logarithmic transform scale. Can only be used when the domain does not include zero. The base defaults to 10",
                      "ID": 3065
                    },
                    {
                      "name": "'symlog'",
                      "type": "quantitative data",
                      "info": "The bi-symmetric logarithmic transform scale",
                      "ID": 3066
                    },
                    {
                      "name": "'ordinal'",
                      "type": "ordinal data",
                      "info": "The ordinal scale",
                      "ID": 3067
                    },
                    {
                      "name": "'utc'",
                      "type": "temporal data",
                      "info": "The UTC time scale. (Default for temporal data)",
                      "ID": 3068
                    },
                    {
                      "name": "'time'",
                      "type": "temporal data",
                      "info": "The local time scale",
                      "ID": 3069
                    },
                    {
                      "name": "'point'",
                      "type": "ordinal data",
                      "info": "The point scale",
                      "ID": 3070
                    },
                    {
                      "name": "'band'",
                      "type": "ordinal data",
                      "info": "The band scale",
                      "ID": 3071
                    },
                    {
                      "name": "'identity'",
                      "type": "any data",
                      "info": "The identity scale",
                      "ID": 3072
                    }
                  ],
                  "info": "Typically the scale type is inferred automatically from data: strings and booleans imply an ordinal scale. Dates imply a UTC scale, anything else is linear",
                  "ID": 3061
                },
                {
                  "name": "domain",
                  "type": "constant array",
                  "info": "The extent of the inputs, typically [min, max], or an array of ordinal or categorical values",
                  "ID": 3073
                },
                {
                  "name": "range",
                  "type": "constant array",
                  "info": "The extent of the outputs (visual values), typically [min, max], or an array of ordinal or categorical values",
                  "ID": 3074
                },
                {
                  "name": "reverse",
                  "type": "constant boolean",
                  "info": "Reverses the domain",
                  "ID": 3075
                },
                {
                  "name": "exponent",
                  "type": "constant number",
                  "info": "Configurable value for the power scale (type: 'pow')",
                  "ID": 3076
                },
                {
                  "name": "base",
                  "type": "constant number",
                  "info": "Configurable value for the log scale (type: 'log'). Default is 10",
                  "ID": 3077
                },
                {
                  "name": "constant",
                  "type": "constant number",
                  "info": "Configurable value for the symlog scale (type: 'symlog'). Default is 1",
                  "ID": 3078
                },
                {
                  "name": "clamp",
                  "type": "constant boolean",
                  "info": "For quantitative scales: if true, clamp input values to the scale’s domain",
                  "ID": 3079
                },
                {
                  "name": "nice",
                  "type": "constant number",
                  "info": "For quantitative scales: if true (or a tick count), extend the domain to nice round values. A top-level nice option is supported as shorthand for setting scale.nice on all scales",
                  "ID": 3080
                },
                {
                  "name": "zero",
                  "type": "constant number",
                  "info": "For quantitative scales: if true, extend the domain to include zero if needed",
                  "ID": 3081
                },
                {
                  "name": "percent",
                  "type": "constant number",
                  "info": "For quantitative scales: if true, transform proportions in [0, 1] to percentages in [0, 100]",
                  "ID": 3082
                },
                {
                  "name": "transform",
                  "type": "function",
                  "info": "Function to be applied to all values before they are passed through the scale",
                  "ID": 3083
                },
                {
                  "name": "inset",
                  "type": "constant number",
                  "info": "Number of pixels to inset the default range",
                  "ID": 3084
                },
                {
                  "name": "round",
                  "type": "constant boolean",
                  "info": "Rounds the output value to the nearest integer (whole pixel)",
                  "ID": 3085
                },
                {
                  "name": "padding",
                  "type": "constant number",
                  "info": "A proportion in [0,1] determining how much of the range to reserve to inset first and last point or band. For ordinal scales",
                  "ID": 3086
                },
                {
                  "name": "align",
                  "type": "constant number",
                  "info": "A proportion in [0,1] determining where to distribute points or bands (0 = at start, 0.5 = at middle, 1 = at end). For ordinal scales",
                  "ID": 3087
                },
                {
                  "name": "paddingInner",
                  "type": "constant number",
                  "info": "A proportion in [0,1] determining how much of the range to reserve to separate adjacent bands. For band scales",
                  "ID": 3088
                },
                {
                  "name": "paddingOuter",
                  "type": "constant number",
                  "info": "A proportion in [0,1] determining how much of the range to reserve to inset first and last band. For band scales",
                  "ID": 3089
                },
                {
                  "name": "axis",
                  "type": "constant string",
                  "info": "The orientation: 'top' or 'bottom' for x; 'left' or 'right' for y; null to suppress",
                  "ID": 3090
                },
                {
                  "name": "ticks",
                  "type": "constant number",
                  "info": "The approximate number of ticks to generate",
                  "ID": 3091
                },
                {
                  "name": "tickSize",
                  "type": "constant number",
                  "info": "The size of each tick (in pixels; default 6)",
                  "ID": 3092
                },
                {
                  "name": "tickPadding",
                  "type": "constant number",
                  "info": "The separation between the tick and its label (in pixels; default 3)",
                  "ID": 3093
                },
                {
                  "name": "tickFormat",
                  "type": "constant string",
                  "info": "A function or format specifier to format tick values",
                  "ID": 3094
                },
                {
                  "name": "tickRotate",
                  "type": "constant number",
                  "info": "An angle in degrees clockwise to rotate tick labels. Default is 0",
                  "ID": 3095
                },
                {
                  "name": "grid",
                  "type": "constant boolean",
                  "info": "Flag determining whether to draw grid lines across the plot for each tick",
                  "ID": 3096
                },
                {
                  "name": "label",
                  "type": "constant string",
                  "info": "A string to label the axis",
                  "ID": 3097
                },
                {
                  "name": "labelAnchor",
                  "type": "constant string",
                  "children": [
                    {
                      "name": "'top'",
                      "type": "string literal",
                      "info": "top",
                      "ID": 3099
                    },
                    {
                      "name": "'right'",
                      "type": "string literal",
                      "info": "right",
                      "ID": 3100
                    },
                    {
                      "name": "'bottom'",
                      "type": "string literal",
                      "info": "bottom",
                      "ID": 3101
                    },
                    {
                      "name": "'left'",
                      "type": "string literal",
                      "info": "left",
                      "ID": 3102
                    },
                    {
                      "name": "'center'",
                      "type": "string literal",
                      "info": "center",
                      "ID": 3103
                    }
                  ],
                  "info": "The label anchor",
                  "ID": 3098
                },
                {
                  "name": "labelOffset",
                  "type": "constant number",
                  "info": "The label position offset in pixels, typically for facet axes. Default is 0",
                  "ID": 3104
                }
              ],
              "info": "The scale for the horizontal position",
              "ID": 3015
            },
            {
              "name": "y",
              "type": "scale object",
              "children": [
                {
                  "name": "type",
                  "type": "constant string",
                  "children": [
                    {
                      "name": "'linear'",
                      "type": "quantitative data",
                      "info": "The default linear transform scale",
                      "ID": 3062
                    },
                    {
                      "name": "'pow'",
                      "type": "quantitative data",
                      "info": "The power (exponential) transform scale",
                      "ID": 3063
                    },
                    {
                      "name": "'sqrt'",
                      "type": "quantitative data",
                      "info": "The square-root transform (pow transform with exponent = 0.5) scale",
                      "ID": 3064
                    },
                    {
                      "name": "'log'",
                      "type": "quantitative data",
                      "info": "The logarithmic transform scale. Can only be used when the domain does not include zero. The base defaults to 10",
                      "ID": 3065
                    },
                    {
                      "name": "'symlog'",
                      "type": "quantitative data",
                      "info": "The bi-symmetric logarithmic transform scale",
                      "ID": 3066
                    },
                    {
                      "name": "'ordinal'",
                      "type": "ordinal data",
                      "info": "The ordinal scale",
                      "ID": 3067
                    },
                    {
                      "name": "'utc'",
                      "type": "temporal data",
                      "info": "The UTC time scale. (Default for temporal data)",
                      "ID": 3068
                    },
                    {
                      "name": "'time'",
                      "type": "temporal data",
                      "info": "The local time scale",
                      "ID": 3069
                    },
                    {
                      "name": "'point'",
                      "type": "ordinal data",
                      "info": "The point scale",
                      "ID": 3070
                    },
                    {
                      "name": "'band'",
                      "type": "ordinal data",
                      "info": "The band scale",
                      "ID": 3071
                    },
                    {
                      "name": "'identity'",
                      "type": "any data",
                      "info": "The identity scale",
                      "ID": 3072
                    }
                  ],
                  "info": "Typically the scale type is inferred automatically from data: strings and booleans imply an ordinal scale. Dates imply a UTC scale, anything else is linear",
                  "ID": 3061
                },
                {
                  "name": "domain",
                  "type": "constant array",
                  "info": "The extent of the inputs, typically [min, max], or an array of ordinal or categorical values",
                  "ID": 3073
                },
                {
                  "name": "range",
                  "type": "constant array",
                  "info": "The extent of the outputs (visual values), typically [min, max], or an array of ordinal or categorical values",
                  "ID": 3074
                },
                {
                  "name": "reverse",
                  "type": "constant boolean",
                  "info": "Reverses the domain",
                  "ID": 3075
                },
                {
                  "name": "exponent",
                  "type": "constant number",
                  "info": "Configurable value for the power scale (type: 'pow')",
                  "ID": 3076
                },
                {
                  "name": "base",
                  "type": "constant number",
                  "info": "Configurable value for the log scale (type: 'log'). Default is 10",
                  "ID": 3077
                },
                {
                  "name": "constant",
                  "type": "constant number",
                  "info": "Configurable value for the symlog scale (type: 'symlog'). Default is 1",
                  "ID": 3078
                },
                {
                  "name": "clamp",
                  "type": "constant boolean",
                  "info": "For quantitative scales: if true, clamp input values to the scale’s domain",
                  "ID": 3079
                },
                {
                  "name": "nice",
                  "type": "constant number",
                  "info": "For quantitative scales: if true (or a tick count), extend the domain to nice round values. A top-level nice option is supported as shorthand for setting scale.nice on all scales",
                  "ID": 3080
                },
                {
                  "name": "zero",
                  "type": "constant number",
                  "info": "For quantitative scales: if true, extend the domain to include zero if needed",
                  "ID": 3081
                },
                {
                  "name": "percent",
                  "type": "constant number",
                  "info": "For quantitative scales: if true, transform proportions in [0, 1] to percentages in [0, 100]",
                  "ID": 3082
                },
                {
                  "name": "transform",
                  "type": "function",
                  "info": "Function to be applied to all values before they are passed through the scale",
                  "ID": 3083
                },
                {
                  "name": "inset",
                  "type": "constant number",
                  "info": "Number of pixels to inset the default range",
                  "ID": 3084
                },
                {
                  "name": "round",
                  "type": "constant boolean",
                  "info": "Rounds the output value to the nearest integer (whole pixel)",
                  "ID": 3085
                },
                {
                  "name": "padding",
                  "type": "constant number",
                  "info": "A proportion in [0,1] determining how much of the range to reserve to inset first and last point or band. For ordinal scales",
                  "ID": 3086
                },
                {
                  "name": "align",
                  "type": "constant number",
                  "info": "A proportion in [0,1] determining where to distribute points or bands (0 = at start, 0.5 = at middle, 1 = at end). For ordinal scales",
                  "ID": 3087
                },
                {
                  "name": "paddingInner",
                  "type": "constant number",
                  "info": "A proportion in [0,1] determining how much of the range to reserve to separate adjacent bands. For band scales",
                  "ID": 3088
                },
                {
                  "name": "paddingOuter",
                  "type": "constant number",
                  "info": "A proportion in [0,1] determining how much of the range to reserve to inset first and last band. For band scales",
                  "ID": 3089
                },
                {
                  "name": "axis",
                  "type": "constant string",
                  "info": "The orientation: 'top' or 'bottom' for x; 'left' or 'right' for y; null to suppress",
                  "ID": 3090
                },
                {
                  "name": "ticks",
                  "type": "constant number",
                  "info": "The approximate number of ticks to generate",
                  "ID": 3091
                },
                {
                  "name": "tickSize",
                  "type": "constant number",
                  "info": "The size of each tick (in pixels; default 6)",
                  "ID": 3092
                },
                {
                  "name": "tickPadding",
                  "type": "constant number",
                  "info": "The separation between the tick and its label (in pixels; default 3)",
                  "ID": 3093
                },
                {
                  "name": "tickFormat",
                  "type": "constant string",
                  "info": "A function or format specifier to format tick values",
                  "ID": 3094
                },
                {
                  "name": "tickRotate",
                  "type": "constant number",
                  "info": "An angle in degrees clockwise to rotate tick labels. Default is 0",
                  "ID": 3095
                },
                {
                  "name": "grid",
                  "type": "constant boolean",
                  "info": "Flag determining whether to draw grid lines across the plot for each tick",
                  "ID": 3096
                },
                {
                  "name": "label",
                  "type": "constant string",
                  "info": "A string to label the axis",
                  "ID": 3097
                },
                {
                  "name": "labelAnchor",
                  "type": "constant string",
                  "children": [
                    {
                      "name": "'top'",
                      "type": "string literal",
                      "info": "top",
                      "ID": 3099
                    },
                    {
                      "name": "'right'",
                      "type": "string literal",
                      "info": "right",
                      "ID": 3100
                    },
                    {
                      "name": "'bottom'",
                      "type": "string literal",
                      "info": "bottom",
                      "ID": 3101
                    },
                    {
                      "name": "'left'",
                      "type": "string literal",
                      "info": "left",
                      "ID": 3102
                    },
                    {
                      "name": "'center'",
                      "type": "string literal",
                      "info": "center",
                      "ID": 3103
                    }
                  ],
                  "info": "The label anchor",
                  "ID": 3098
                },
                {
                  "name": "labelOffset",
                  "type": "constant number",
                  "info": "The label position offset in pixels, typically for facet axes. Default is 0",
                  "ID": 3104
                }
              ],
              "info": "The scale for the vertical position",
              "ID": 3060
            },
            {
              "name": "r",
              "type": "scale object",
              "children": [
                {
                  "name": "type",
                  "type": "constant string",
                  "children": [
                    {
                      "name": "'linear'",
                      "type": "quantitative data",
                      "info": "The default linear transform scale",
                      "ID": 3208
                    },
                    {
                      "name": "'pow'",
                      "type": "quantitative data",
                      "info": "The power (exponential) transform scale",
                      "ID": 3209
                    },
                    {
                      "name": "'sqrt'",
                      "type": "quantitative data",
                      "info": "The square-root transform (pow transform with exponent = 0.5) scale",
                      "ID": 3210
                    },
                    {
                      "name": "'log'",
                      "type": "quantitative data",
                      "info": "The logarithmic transform scale. Can only be used when the domain does not include zero. The base defaults to 10",
                      "ID": 3211
                    },
                    {
                      "name": "'symlog'",
                      "type": "quantitative data",
                      "info": "The bi-symmetric logarithmic transform scale",
                      "ID": 3212
                    },
                    {
                      "name": "'ordinal'",
                      "type": "ordinal data",
                      "info": "The ordinal scale",
                      "ID": 3213
                    },
                    {
                      "name": "'identity'",
                      "type": "any data",
                      "info": "The identity scale",
                      "ID": 3214
                    }
                  ],
                  "info": "Typically the scale type is inferred automatically from data: strings and booleans imply an ordinal scale. Dates imply a UTC scale, anything else is linear",
                  "ID": 3207
                },
                {
                  "name": "domain",
                  "type": "constant array",
                  "info": "The extent of the inputs, typically [min, max], or an array of ordinal or categorical values",
                  "ID": 3215
                },
                {
                  "name": "range",
                  "type": "constant array",
                  "info": "The extent of the outputs (visual values), typically [min, max]",
                  "ID": 3216
                },
                {
                  "name": "reverse",
                  "type": "constant boolean",
                  "info": "Reverses the domain",
                  "ID": 3217
                },
                {
                  "name": "exponent",
                  "type": "constant number",
                  "info": "Configurable value for the power scale (type: 'pow')",
                  "ID": 3218
                },
                {
                  "name": "base",
                  "type": "constant number",
                  "info": "Configurable value for the log scale (type: 'log'). Default is 10",
                  "ID": 3219
                },
                {
                  "name": "constant",
                  "type": "constant number",
                  "info": "Configurable value for the symlog scale (type: 'symlog'). Default is 1",
                  "ID": 3220
                },
                {
                  "name": "clamp",
                  "type": "constant boolean",
                  "info": "For quantitative scales: if true, clamp input values to the scale’s domain",
                  "ID": 3221
                },
                {
                  "name": "nice",
                  "type": "constant number",
                  "info": "For quantitative scales: if true (or a tick count), extend the domain to nice round values. A top-level nice option is supported as shorthand for setting scale.nice on all scales",
                  "ID": 3222
                },
                {
                  "name": "zero",
                  "type": "constant number",
                  "info": "For quantitative scales: if true, extend the domain to include zero if needed",
                  "ID": 3223
                },
                {
                  "name": "percent",
                  "type": "constant number",
                  "info": "For quantitative scales: if true, transform proportions in [0, 1] to percentages in [0, 100]",
                  "ID": 3224
                },
                {
                  "name": "transform",
                  "type": "function",
                  "info": "Function to be applied to all values before they are passed through the scale",
                  "ID": 3225
                }
              ],
              "info": "The radius scale. Default type is sqrt",
              "ID": 3105
            },
            {
              "name": "color",
              "type": "scale object",
              "children": [
                {
                  "name": "type",
                  "type": "constant string",
                  "children": [
                    {
                      "name": "'sequential'",
                      "type": "quantitative data",
                      "info": "Equivalent to linear",
                      "ID": 3127
                    },
                    {
                      "name": "'cyclical'",
                      "type": "quantitative data",
                      "info": "Equivalent to linear, but defaults to the rainbow scheme",
                      "ID": 3128
                    },
                    {
                      "name": "'diverging'",
                      "type": "quantitative data",
                      "info": "Like linear, but with a pivot. Defaults to the rdbu scheme",
                      "ID": 3129
                    },
                    {
                      "name": "'categorical'",
                      "type": "categorical data",
                      "info": "Equivalent to ordinal, but defaults to the tableau10 scheme",
                      "ID": 3130
                    },
                    {
                      "name": "'linear'",
                      "type": "quantitative data",
                      "info": "The default linear transform scale",
                      "ID": 3131
                    },
                    {
                      "name": "'pow'",
                      "type": "quantitative data",
                      "info": "The power (exponential) transform scale",
                      "ID": 3132
                    },
                    {
                      "name": "'sqrt'",
                      "type": "quantitative data",
                      "info": "The square-root transform (pow transform with exponent = 0.5) scale",
                      "ID": 3133
                    },
                    {
                      "name": "'log'",
                      "type": "quantitative data",
                      "info": "The logarithmic transform scale. Can only be used when the domain does not include zero. The base defaults to 10",
                      "ID": 3134
                    },
                    {
                      "name": "'symlog'",
                      "type": "quantitative data",
                      "info": "The bi-symmetric logarithmic transform scale",
                      "ID": 3135
                    },
                    {
                      "name": "'ordinal'",
                      "type": "ordinal data",
                      "info": "The ordinal scale",
                      "ID": 3136
                    },
                    {
                      "name": "'identity'",
                      "type": "any data",
                      "info": "The identity scale",
                      "ID": 3137
                    }
                  ],
                  "info": "Typically the scale type is inferred automatically from data: strings and booleans imply an ordinal scale. Dates imply a UTC scale, anything else is linear",
                  "ID": 3126
                },
                {
                  "name": "scheme",
                  "type": "constant string",
                  "children": [
                    {
                      "name": "'blues'",
                      "type": "sequential",
                      "url": "schemes/blues.png",
                      "ID": 3139
                    },
                    {
                      "name": "'greens'",
                      "type": "sequential",
                      "url": "schemes/greens.png",
                      "ID": 3140
                    },
                    {
                      "name": "'greys'",
                      "type": "sequential",
                      "url": "schemes/greys.png",
                      "ID": 3141
                    },
                    {
                      "name": "oranges'",
                      "type": "sequential",
                      "url": "schemes/oranges.png",
                      "ID": 3142
                    },
                    {
                      "name": "'purples'",
                      "type": "sequential",
                      "url": "schemes/purples.png",
                      "ID": 3143
                    },
                    {
                      "name": "'reds'",
                      "type": "sequential",
                      "url": "schemes/reds.png",
                      "ID": 3144
                    },
                    {
                      "name": "'bugn'",
                      "type": "sequential",
                      "url": "schemes/bugn.png",
                      "ID": 3145
                    },
                    {
                      "name": "'bupu'",
                      "type": "sequential",
                      "url": "schemes/bupu.png",
                      "ID": 3146
                    },
                    {
                      "name": "'gnbu'",
                      "type": "sequential",
                      "url": "schemes/gnbu.png",
                      "ID": 3147
                    },
                    {
                      "name": "'orrd'",
                      "type": "sequential",
                      "url": "schemes/orrd.png",
                      "ID": 3148
                    },
                    {
                      "name": "'pubu'",
                      "type": "sequential",
                      "url": "schemes/pubu.png",
                      "ID": 3149
                    },
                    {
                      "name": "'pubugn'",
                      "type": "sequential",
                      "url": "schemes/pubugn.png",
                      "ID": 3150
                    },
                    {
                      "name": "'purd'",
                      "type": "sequential",
                      "url": "schemes/purd.png",
                      "ID": 3151
                    },
                    {
                      "name": "'rdpu'",
                      "type": "sequential",
                      "url": "schemes/rdpu.png",
                      "ID": 3152
                    },
                    {
                      "name": "'ylgn'",
                      "type": "sequential",
                      "url": "schemes/ylgn.png",
                      "ID": 3153
                    },
                    {
                      "name": "'ylgnbu'",
                      "type": "sequential",
                      "url": "schemes/ylgnbu.png",
                      "ID": 3154
                    },
                    {
                      "name": "'ylorbr'",
                      "type": "sequential",
                      "url": "schemes/ylorbr.png",
                      "ID": 3155
                    },
                    {
                      "name": "'ylorrd'",
                      "type": "sequential",
                      "url": "schemes/ylorrd.png",
                      "ID": 3156
                    },
                    {
                      "name": "'cividis'",
                      "type": "sequential",
                      "url": "schemes/cividis.png",
                      "ID": 3157
                    },
                    {
                      "name": "'inferno'",
                      "type": "sequential",
                      "url": "schemes/inferno.png",
                      "ID": 3158
                    },
                    {
                      "name": "'magma'",
                      "type": "sequential",
                      "url": "schemes/magma.png",
                      "ID": 3159
                    },
                    {
                      "name": "'plasma'",
                      "type": "sequential",
                      "url": "schemes/plasma.png",
                      "ID": 3160
                    },
                    {
                      "name": "'viridis'",
                      "type": "sequential",
                      "url": "schemes/viridis.png",
                      "ID": 3161
                    },
                    {
                      "name": "'cubehelix'",
                      "type": "sequential",
                      "url": "schemes/cubehelix.png",
                      "ID": 3162
                    },
                    {
                      "name": "'turbo'",
                      "type": "sequential",
                      "url": "schemes/turbo.png",
                      "info": "The default color scheme",
                      "ID": 3163
                    },
                    {
                      "name": "'warm'",
                      "type": "sequential",
                      "url": "schemes/warm.png",
                      "ID": 3164
                    },
                    {
                      "name": "'cool'",
                      "type": "sequential",
                      "url": "schemes/cool.png",
                      "ID": 3165
                    },
                    {
                      "name": "'brbg'",
                      "type": "diverging",
                      "url": "schemes/brbg.png",
                      "ID": 3166
                    },
                    {
                      "name": "'prgn'",
                      "type": "diverging",
                      "url": "schemes/prgn.png",
                      "ID": 3167
                    },
                    {
                      "name": "'piyg'",
                      "type": "diverging",
                      "url": "schemes/piyg.png",
                      "ID": 3168
                    },
                    {
                      "name": "'puor'",
                      "type": "diverging",
                      "url": "schemes/puor.png",
                      "ID": 3169
                    },
                    {
                      "name": "'rdbu'",
                      "type": "diverging",
                      "url": "schemes/rdbu.png",
                      "ID": 3170
                    },
                    {
                      "name": "'rdgy'",
                      "type": "diverging",
                      "url": "schemes/rdgy.png",
                      "ID": 3171
                    },
                    {
                      "name": "'rdylbu'",
                      "type": "diverging",
                      "url": "schemes/rdylbu.png",
                      "ID": 3172
                    },
                    {
                      "name": "'rdylgn'",
                      "type": "diverging",
                      "url": "schemes/rdylgn.png",
                      "ID": 3173
                    },
                    {
                      "name": "'spectral'",
                      "type": "diverging",
                      "url": "schemes/spectral.png",
                      "ID": 3174
                    },
                    {
                      "name": "'burd'",
                      "type": "diverging",
                      "url": "schemes/burd.png",
                      "ID": 3175
                    },
                    {
                      "name": "'buylrd'",
                      "type": "diverging",
                      "url": "schemes/buylrd.png",
                      "ID": 3176
                    },
                    {
                      "name": "'rainbow'",
                      "type": "cyclical",
                      "url": "schemes/rainbow.png",
                      "ID": 3177
                    },
                    {
                      "name": "'sinebow'",
                      "type": "cyclical",
                      "url": "schemes/sinebow.png",
                      "ID": 3178
                    },
                    {
                      "name": "'accent'",
                      "type": "categorical",
                      "url": "schemes/accent.png",
                      "ID": 3179
                    },
                    {
                      "name": "'category10'",
                      "type": "categorical",
                      "url": "schemes/category10.png",
                      "ID": 3180
                    },
                    {
                      "name": "'dark2'",
                      "type": "categorical",
                      "url": "schemes/dark2.png",
                      "ID": 3181
                    },
                    {
                      "name": "'paired'",
                      "type": "categorical",
                      "url": "schemes/paired.png",
                      "ID": 3182
                    },
                    {
                      "name": "'pastel1'",
                      "type": "categorical",
                      "url": "schemes/pastel1.png",
                      "ID": 3183
                    },
                    {
                      "name": "'pastel2'",
                      "type": "categorical",
                      "url": "schemes/pastel2.png",
                      "ID": 3184
                    },
                    {
                      "name": "'set1'",
                      "type": "categorical",
                      "url": "schemes/set1.png",
                      "ID": 3185
                    },
                    {
                      "name": "'set2'",
                      "type": "categorical",
                      "url": "schemes/set2.png",
                      "ID": 3186
                    },
                    {
                      "name": "'set3'",
                      "type": "categorical",
                      "url": "schemes/set3.png",
                      "ID": 3187
                    },
                    {
                      "name": "'tableau10'",
                      "type": "categorical",
                      "url": "schemes/tableau10.png",
                      "ID": 3188
                    }
                  ],
                  "info": "A named color scheme which determines the range",
                  "ID": 3138
                },
                {
                  "name": "interpolate",
                  "type": "constant string",
                  "children": [
                    {
                      "name": "'rgb'",
                      "type": "string literal",
                      "info": "RGB (red, green, blue)",
                      "ID": 3190
                    },
                    {
                      "name": "'hsl'",
                      "type": "string literal",
                      "info": "HSL (hue, saturation, lightness)",
                      "ID": 3191
                    },
                    {
                      "name": "'lab'",
                      "type": "string literal",
                      "info": "CIELAB (a.k.a. 'Lab')",
                      "ID": 3192
                    },
                    {
                      "name": "'hcl'",
                      "type": "string literal",
                      "info": "CIELChab (a.k.a. 'LCh' or 'HCL')",
                      "ID": 3193
                    }
                  ],
                  "info": "Determines how to interpolate colors specified in the range",
                  "ID": 3189
                },
                {
                  "name": "domain",
                  "type": "constant array",
                  "info": "The extent of the inputs, typically [min, max], or an array of ordinal or categorical values",
                  "ID": 3194
                },
                {
                  "name": "range",
                  "type": "constant array",
                  "info": "The extent of the outputs (visual values), typically [min, max]",
                  "ID": 3195
                },
                {
                  "name": "reverse",
                  "type": "constant boolean",
                  "info": "Reverses the domain",
                  "ID": 3196
                },
                {
                  "name": "pivot",
                  "type": "constant number",
                  "info": "The pivot for which values below will use the lower half of the color scheme (e.g., reds for the rdgy scheme), while values above will use the upper half (grays for rdgy).",
                  "ID": 3197
                },
                {
                  "name": "exponent",
                  "type": "constant number",
                  "info": "Configurable value for the power scale (type: 'pow')",
                  "ID": 3198
                },
                {
                  "name": "base",
                  "type": "constant number",
                  "info": "Configurable value for the log scale (type: 'log'). Default is 10",
                  "ID": 3199
                },
                {
                  "name": "constant",
                  "type": "constant number",
                  "info": "Configurable value for the symlog scale (type: 'symlog'). Default is 1",
                  "ID": 3200
                },
                {
                  "name": "clamp",
                  "type": "constant boolean",
                  "info": "For quantitative scales: if true, clamp input values to the scale’s domain",
                  "ID": 3201
                },
                {
                  "name": "nice",
                  "type": "constant number",
                  "info": "For quantitative scales: if true (or a tick count), extend the domain to nice round values. A top-level nice option is supported as shorthand for setting scale.nice on all scales",
                  "ID": 3202
                },
                {
                  "name": "zero",
                  "type": "constant number",
                  "info": "For quantitative scales: if true, extend the domain to include zero if needed",
                  "ID": 3203
                },
                {
                  "name": "percent",
                  "type": "constant number",
                  "info": "For quantitative scales: if true, transform proportions in [0, 1] to percentages in [0, 100]",
                  "ID": 3204
                },
                {
                  "name": "transform",
                  "type": "function",
                  "info": "Function to be applied to all values before they are passed through the scale",
                  "ID": 3205
                }
              ],
              "info": "The color scale determining the color for the fill and stroke channels",
              "ID": 3125
            },
            {
              "name": "opacity",
              "type": "scale object",
              "children": [
                {
                  "name": "type",
                  "type": "constant string",
                  "children": [
                    {
                      "name": "'linear'",
                      "type": "quantitative data",
                      "info": "The default linear transform scale",
                      "ID": 3208
                    },
                    {
                      "name": "'pow'",
                      "type": "quantitative data",
                      "info": "The power (exponential) transform scale",
                      "ID": 3209
                    },
                    {
                      "name": "'sqrt'",
                      "type": "quantitative data",
                      "info": "The square-root transform (pow transform with exponent = 0.5) scale",
                      "ID": 3210
                    },
                    {
                      "name": "'log'",
                      "type": "quantitative data",
                      "info": "The logarithmic transform scale. Can only be used when the domain does not include zero. The base defaults to 10",
                      "ID": 3211
                    },
                    {
                      "name": "'symlog'",
                      "type": "quantitative data",
                      "info": "The bi-symmetric logarithmic transform scale",
                      "ID": 3212
                    },
                    {
                      "name": "'ordinal'",
                      "type": "ordinal data",
                      "info": "The ordinal scale",
                      "ID": 3213
                    },
                    {
                      "name": "'identity'",
                      "type": "any data",
                      "info": "The identity scale",
                      "ID": 3214
                    }
                  ],
                  "info": "Typically the scale type is inferred automatically from data: strings and booleans imply an ordinal scale. Dates imply a UTC scale, anything else is linear",
                  "ID": 3207
                },
                {
                  "name": "domain",
                  "type": "constant array",
                  "info": "The extent of the inputs, typically [min, max], or an array of ordinal or categorical values",
                  "ID": 3215
                },
                {
                  "name": "range",
                  "type": "constant array",
                  "info": "The extent of the outputs (visual values), typically [min, max]",
                  "ID": 3216
                },
                {
                  "name": "reverse",
                  "type": "constant boolean",
                  "info": "Reverses the domain",
                  "ID": 3217
                },
                {
                  "name": "exponent",
                  "type": "constant number",
                  "info": "Configurable value for the power scale (type: 'pow')",
                  "ID": 3218
                },
                {
                  "name": "base",
                  "type": "constant number",
                  "info": "Configurable value for the log scale (type: 'log'). Default is 10",
                  "ID": 3219
                },
                {
                  "name": "constant",
                  "type": "constant number",
                  "info": "Configurable value for the symlog scale (type: 'symlog'). Default is 1",
                  "ID": 3220
                },
                {
                  "name": "clamp",
                  "type": "constant boolean",
                  "info": "For quantitative scales: if true, clamp input values to the scale’s domain",
                  "ID": 3221
                },
                {
                  "name": "nice",
                  "type": "constant number",
                  "info": "For quantitative scales: if true (or a tick count), extend the domain to nice round values. A top-level nice option is supported as shorthand for setting scale.nice on all scales",
                  "ID": 3222
                },
                {
                  "name": "zero",
                  "type": "constant number",
                  "info": "For quantitative scales: if true, extend the domain to include zero if needed",
                  "ID": 3223
                },
                {
                  "name": "percent",
                  "type": "constant number",
                  "info": "For quantitative scales: if true, transform proportions in [0, 1] to percentages in [0, 100]",
                  "ID": 3224
                },
                {
                  "name": "transform",
                  "type": "function",
                  "info": "Function to be applied to all values before they are passed through the scale",
                  "ID": 3225
                }
              ],
              "info": "The scale for fill or stroke opacity",
              "ID": 3206
            },
            {
              "name": "fx",
              "type": "scale object",
              "children": [
                {
                  "name": "domain",
                  "type": "constant array",
                  "info": "An array of ordinal or categorical values",
                  "ID": 3253
                },
                {
                  "name": "range",
                  "type": "constant array",
                  "info": "An array of ordinal or categorical values",
                  "ID": 3254
                },
                {
                  "name": "reverse",
                  "type": "constant boolean",
                  "info": "Reverses the domain",
                  "ID": 3255
                },
                {
                  "name": "transform",
                  "type": "function",
                  "info": "Function to be applied to all values before they are passed through the scale",
                  "ID": 3256
                },
                {
                  "name": "inset",
                  "type": "constant number",
                  "info": "Number of pixels to inset the default range",
                  "ID": 3257
                },
                {
                  "name": "round",
                  "type": "constant boolean",
                  "info": "Rounds the output value to the nearest integer (whole pixel)",
                  "ID": 3258
                },
                {
                  "name": "padding",
                  "type": "constant number",
                  "info": "A proportion in [0,1] determining how much of the range to reserve to inset first and last point or band. For ordinal scales",
                  "ID": 3259
                },
                {
                  "name": "align",
                  "type": "constant number",
                  "info": "A proportion in [0,1] determining where to distribute points or bands (0 = at start, 0.5 = at middle, 1 = at end). For ordinal scales",
                  "ID": 3260
                },
                {
                  "name": "paddingInner",
                  "type": "constant number",
                  "info": "A proportion in [0,1] determining how much of the range to reserve to separate adjacent bands. For band scales",
                  "ID": 3261
                },
                {
                  "name": "paddingOuter",
                  "type": "constant number",
                  "info": "A proportion in [0,1] determining how much of the range to reserve to inset first and last band. For band scales",
                  "ID": 3262
                },
                {
                  "name": "axis",
                  "type": "constant string",
                  "info": "The orientation: 'top' or 'bottom' for x; 'left' or 'right' for y; null to suppress",
                  "ID": 3263
                },
                {
                  "name": "ticks",
                  "type": "constant number",
                  "info": "The approximate number of ticks to generate",
                  "ID": 3264
                },
                {
                  "name": "tickSize",
                  "type": "constant number",
                  "info": "The size of each tick (in pixels; default 6)",
                  "ID": 3265
                },
                {
                  "name": "tickPadding",
                  "type": "constant number",
                  "info": "The separation between the tick and its label (in pixels; default 3)",
                  "ID": 3266
                },
                {
                  "name": "tickFormat",
                  "type": "constant string",
                  "info": "A function or format specifier to format tick values",
                  "ID": 3267
                },
                {
                  "name": "tickRotate",
                  "type": "constant number",
                  "info": "An angle in degrees clockwise to rotate tick labels. Default is 0",
                  "ID": 3268
                },
                {
                  "name": "grid",
                  "type": "constant boolean",
                  "info": "Flag determining whether to draw grid lines across the plot for each tick",
                  "ID": 3269
                },
                {
                  "name": "label",
                  "type": "constant string",
                  "info": "A string to label the axis",
                  "ID": 3270
                },
                {
                  "name": "labelAnchor",
                  "type": "constant string",
                  "children": [
                    {
                      "name": "'top'",
                      "type": "string literal",
                      "info": "top",
                      "ID": 3272
                    },
                    {
                      "name": "'right'",
                      "type": "string literal",
                      "info": "right",
                      "ID": 3273
                    },
                    {
                      "name": "'bottom'",
                      "type": "string literal",
                      "info": "bottom",
                      "ID": 3274
                    },
                    {
                      "name": "'left'",
                      "type": "string literal",
                      "info": "left",
                      "ID": 3275
                    },
                    {
                      "name": "'center'",
                      "type": "string literal",
                      "info": "center",
                      "ID": 3276
                    }
                  ],
                  "info": "The label anchor",
                  "ID": 3271
                },
                {
                  "name": "labelOffset",
                  "type": "constant number",
                  "info": "The label position offset in pixels, typically for facet axes. Default is 0",
                  "ID": 3277
                }
              ],
              "info": "The scale for the horizontal position of the facets. Must be a band scale",
              "ID": 3226
            },
            {
              "name": "fy",
              "type": "scale object",
              "children": [
                {
                  "name": "domain",
                  "type": "constant array",
                  "info": "An array of ordinal or categorical values",
                  "ID": 3253
                },
                {
                  "name": "range",
                  "type": "constant array",
                  "info": "An array of ordinal or categorical values",
                  "ID": 3254
                },
                {
                  "name": "reverse",
                  "type": "constant boolean",
                  "info": "Reverses the domain",
                  "ID": 3255
                },
                {
                  "name": "transform",
                  "type": "function",
                  "info": "Function to be applied to all values before they are passed through the scale",
                  "ID": 3256
                },
                {
                  "name": "inset",
                  "type": "constant number",
                  "info": "Number of pixels to inset the default range",
                  "ID": 3257
                },
                {
                  "name": "round",
                  "type": "constant boolean",
                  "info": "Rounds the output value to the nearest integer (whole pixel)",
                  "ID": 3258
                },
                {
                  "name": "padding",
                  "type": "constant number",
                  "info": "A proportion in [0,1] determining how much of the range to reserve to inset first and last point or band. For ordinal scales",
                  "ID": 3259
                },
                {
                  "name": "align",
                  "type": "constant number",
                  "info": "A proportion in [0,1] determining where to distribute points or bands (0 = at start, 0.5 = at middle, 1 = at end). For ordinal scales",
                  "ID": 3260
                },
                {
                  "name": "paddingInner",
                  "type": "constant number",
                  "info": "A proportion in [0,1] determining how much of the range to reserve to separate adjacent bands. For band scales",
                  "ID": 3261
                },
                {
                  "name": "paddingOuter",
                  "type": "constant number",
                  "info": "A proportion in [0,1] determining how much of the range to reserve to inset first and last band. For band scales",
                  "ID": 3262
                },
                {
                  "name": "axis",
                  "type": "constant string",
                  "info": "The orientation: 'top' or 'bottom' for x; 'left' or 'right' for y; null to suppress",
                  "ID": 3263
                },
                {
                  "name": "ticks",
                  "type": "constant number",
                  "info": "The approximate number of ticks to generate",
                  "ID": 3264
                },
                {
                  "name": "tickSize",
                  "type": "constant number",
                  "info": "The size of each tick (in pixels; default 6)",
                  "ID": 3265
                },
                {
                  "name": "tickPadding",
                  "type": "constant number",
                  "info": "The separation between the tick and its label (in pixels; default 3)",
                  "ID": 3266
                },
                {
                  "name": "tickFormat",
                  "type": "constant string",
                  "info": "A function or format specifier to format tick values",
                  "ID": 3267
                },
                {
                  "name": "tickRotate",
                  "type": "constant number",
                  "info": "An angle in degrees clockwise to rotate tick labels. Default is 0",
                  "ID": 3268
                },
                {
                  "name": "grid",
                  "type": "constant boolean",
                  "info": "Flag determining whether to draw grid lines across the plot for each tick",
                  "ID": 3269
                },
                {
                  "name": "label",
                  "type": "constant string",
                  "info": "A string to label the axis",
                  "ID": 3270
                },
                {
                  "name": "labelAnchor",
                  "type": "constant string",
                  "children": [
                    {
                      "name": "'top'",
                      "type": "string literal",
                      "info": "top",
                      "ID": 3272
                    },
                    {
                      "name": "'right'",
                      "type": "string literal",
                      "info": "right",
                      "ID": 3273
                    },
                    {
                      "name": "'bottom'",
                      "type": "string literal",
                      "info": "bottom",
                      "ID": 3274
                    },
                    {
                      "name": "'left'",
                      "type": "string literal",
                      "info": "left",
                      "ID": 3275
                    },
                    {
                      "name": "'center'",
                      "type": "string literal",
                      "info": "center",
                      "ID": 3276
                    }
                  ],
                  "info": "The label anchor",
                  "ID": 3271
                },
                {
                  "name": "labelOffset",
                  "type": "constant number",
                  "info": "The label position offset in pixels, typically for facet axes. Default is 0",
                  "ID": 3277
                }
              ],
              "info": "The scale for the vertical position of the facets. Must be a band scale",
              "ID": 3252
            },
            {
              "name": "marks",
              "type": "marks array",
              "info": "The marks option specifies an array of marks to render. Each mark has its own data and options. See Select tree → marks",
              "ID": 3278
            },
            {
              "name": "marginTop",
              "type": "constant number",
              "info": "The top margin",
              "ID": 3279
            },
            {
              "name": "marginRight",
              "type": "constant number",
              "info": "The right margin",
              "ID": 3280
            },
            {
              "name": "marginBottom",
              "type": "constant number",
              "info": "The bottom margin",
              "ID": 3281
            },
            {
              "name": "marginLeft",
              "type": "constant number",
              "info": "The left margin",
              "ID": 3282
            },
            {
              "name": "width",
              "type": "constant number",
              "info": "The outer width of the plot (including margins). Default is 640",
              "ID": 3283
            },
            {
              "name": "height",
              "type": "constant number",
              "info": "The outer height of the plot (including margins). The default height is 396 if the plot has a y or fy scale; otherwise it is 90 if the plot has an fx scale, or 60 if it does not",
              "ID": 3284
            },
            {
              "name": "style",
              "type": "constant string",
              "info": "Custom styles to override Plot’s defaults",
              "ID": 3285
            },
            {
              "name": "grid",
              "type": "constant boolean",
              "info": "Flag determining whether to draw grid lines for x and y across the plot for each tick. Shorthand for scale specific grip option",
              "ID": 3286
            },
            {
              "name": "inset",
              "type": "constant number",
              "info": "Number of pixels to inset the default ranges for x and y. Shorthand for scale specific inset option",
              "ID": 3287
            },
            {
              "name": "round",
              "type": "constant boolean",
              "info": "Rounds the output value for the x and y scale to the nearest integer (whole pixel). Shorthand for scale specific round option",
              "ID": 3288
            },
            {
              "name": "align",
              "type": "constant number",
              "info": "A proportion in [0,1] determining where to distribute points or bands (0 = at start, 0.5 = at middle, 1 = at end) for ordinal x and y scales. Shorthand for scale specific align option",
              "ID": 3289
            },
            {
              "name": "padding",
              "type": "constant number",
              "info": "A proportion in [0,1] determining how much of the range to reserve to separate adjacent bands for x and y band scales. Shorthand for scale specific padding option",
              "ID": 3290
            },
            {
              "name": "nice",
              "type": "constant number",
              "info": "For quantitative scales: if true (or a tick count), extend the domain to nice round values. Shorthand for scale specific nice option",
              "ID": 3291
            },
            {
              "name": "caption",
              "type": "constant string",
              "info": "Wraps the generated SVG element in an HTML figure element with a figcaption (as string or html tagges template literal. It returns the figure",
              "ID": 3292
            }
          ],
          "ID": 3005
        }
      ],
      "ID": 3004
    }
  ],
  "ID": 0
}